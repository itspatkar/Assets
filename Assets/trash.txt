
Analyze Web Applicat ions 
• Analyze the active application’s functionality and technologies to identify exposed attack surfaces

Analyzing the target website may provide the following information: 
• Software used and its version 
• Operating system used and its scripting platform 
• Sub-directories and parameters 
• Filename, path, database field name, or query 
• Technologies used 
• Contact and CMS details

Attackers use Burp Suite, Zaproxy, Wappalyzer, CentralOps, Website Informer, etc. to view headers that provide the following information: 
• Connection status and content-type 
• Accept-Ranges and Last-Modified 
• X-Powered-By information 
• Web server in use and its version


Analyze Web Applicat ions: Website Mirroring HTTrack Web Site Copier

• Mirroring an entire website onto a local system enables an attacker to browse website offline; it also assists in finding directory structure and other valuable information from the mirrored copy without sending multiple requests to web server
• Web mirroring tools, such as HTTrack Web Site Copier, and Cyotek WebCopy, allow you to download a website to a local directory, recursively building all directories, HTML, images, flash, videos, and other files from the server to your computer


Website Mirroring with AI
• An attacker can also leverage AI-powered ChatGPT or other generative AI technology to perform this task by using appropriate prompts such as:
    ▪ “Mirror the target website certifiedhacker.com”
    ▪ “Mirror the target website https://certifiedhacker.com with httrack on desktop”


Analyze Web Applications: Ident ify Ent ry Points for User Input
- Examine URL, HTTP Header, query string parameters, POST data, and cookies to determine all user input fields
- Identify HTTP header parameters that can be processed by the application as user inputs such as User-Agent, Referer, Accept, Accept-Language, and Host headers
- Determine URL encoding techniques and other encryption measures implemented for secure web traffic such as SSL

Tools used:
• Burp Suite (https://portswigger.net)
• OWASP Zed Attack Proxy (https://www.zaproxy.org)
• WebScarab (https://owasp.org)
• httprint (https://www.net-square.com)


Analyze Web Applicat ions: Ident ify Server-Side Technologies
• Perform a detailed server fingerprinting, analyze HTTP headers and HTML source code to identify server-side technologies
• Examine URLs for file extensions, directories, and other identification information
• Examine the error page messages
• Examine session tokens: JSESSIONID – Java, ASPSESSIONID – IIS server, ASP.NET_SessionId - ASP.NET, PHPSESSID – PHP
• Use tools such as httprint and WhatWeb to identify server-side technologies


Ident ify Server-Side Technologies using AI
• An attacker can also leverage AI-powered ChatGPT or other generative AI technology to perform this task by using an appropriate prompt such as:
▪ “Launch whatweb on the target website www.moviescope.com to perform website footprinting. Run a verbose scan and print the output. Save the results in file whatweb_log.txt.”


Analyze Web Applicat ions: Ident ify Files and Directories 
• Attackers use tools such as Gobuster or Nmap NSE script http-enum to enumerate applications, as well as hidden directories and files of the web application hosted on the web server, that are exposed on the internet

Identify Files and Directories with AI
• Attackers use tools such as Gobuster or Nmap NSE script http-enum to enumerate applications, as well as hidden directories and files of the web application hosted on the web server, that are exposed on the Internet
• ChatGPT prompts to perform this task using AI:
    ▪ “Scan the web content of target url www.moviescope.com using Dirb”
    ▪ “Scan the web content of target url www.moviescope.com using Gobuster”


Analyze Web Applicat ions: Ident ify Web Applicat ion Vulnerabilit ies
• Attackers use various techniques to detect vulnerabilities in target web applications hosted on web servers either to gain administrator level access to the server or to retrieve sensitive information stored on the server
• Comprehensive vulnerability scanning can disclose security flaws associated with executables, binaries, and technologies used in a web application
• Attackers can use tools such as Vega to the vulnerabilities of target web applications

Web Application Scanning Tools
• Vega: Vega helps you to find and validate SQL injection, Cross-Site Scripting (XSS), inadvertently disclosed sensitive information, and other vulnerabilities
• WPScan Vulnerability Database (https://wpscan.com)
• Codename SCNR (https://ecsypno.com)
• AppSpider (https://www.rapid7.com)
• Uniscan (https://github.com)


Ident ify Web Applicat ion Vulnerabilit ies with AI
• An attacker can also leverage AI-powered ChatGPT or other generative AI technology to perform this task by using appropriate prompts such as:
    ▪ “Perform the Vulnerability scan on the target url www.moviescope.com ”
    ▪ “Perform the Vulnerability scan on the target url www.moviescope.com using nmap”
    ▪ “Install Sn1per tool and scan the target url www.moviescope.com for web vulnerabilities and save result in file scan3.txt”

----


Website Mirroring
Website mirroring is the process of creating a replica or clone of the original website. Attackers can duplicate websites using mirroring tools such as HTTrack Web Site Copier and Cyotek WebCopy. These tools download a website to a local directory and recursively build all the directories including HTML, images, flash, videos, and other files from the webserver on another computer.

Website mirroring has the following benefits:
▪ It is helpful for offline site browsing
▪ It enables an attacker to spend more time in viewing and analyzing the website for vulnerabilities and loopholes
▪ It helps in finding the directory structure and other valuable information from the mirrored copy without multiple requests to the webserver

Attackers can use this information to perform various web application attacks on the target organization’s website.
▪ Website Mirroring Tool: HTTrack Web Site Copier
Source: https://www.httrack.com
HTTrack is an offline browser utility. It downloads a website from the Internet to a local directory and recursively builds all the directories including HTML, images, and other files from the web server on another computer. As shown in the screenshot, attackers use HTTrack to mirror the entire website of the target organization, store it in the local system drive, and browse the local website to identify possible exploits and vulnerabilities.
