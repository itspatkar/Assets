
# Footprinting and Reconnaissance (OSINT - Information Gathering)

- Online platforms: Social media, people search sites and services, job portals, blogs, forums, groups, articles, etc
- Source code–based repositories (internal servers, self-hosted, third-party hosting - GitHub, GitLab, SourceForge, BitBucket) contain sensitive data, configuration files, SSH, SSL keys, source-code files, dynamic libraries
- Web Services:
	- Advance Search using Search Engines, Image Searches, Reverse Search
	- FTP Search Engine (NAPALM FTP Indexer, FreewareWeb FTP File Search, Mamont, Globalfilesearch.com)
	- IoT Search Engines (Shodan, Censys, ZoomEye - manufacturer details, geographical location, IP address, hostname, open ports of IoT device)
	- Google Dorks (Advanced search operators/queries in Google Search Engine to find information - sites, links, files, open FTP ports, services)
	- www.exploit-db.com (Exploit-DB is online archive of exploits, security vulnerabilities, and proof-of-concept code)
	- www.exploit-db.com/google-hacking-database (GHDB - Google Hacking Database is collection of advanced search queries - Google Dorks)
	- archive.org (Digital Library & Internet Archive Wayback Machine that explores archived versions of websites)
	- www.social-searcher.com - Social Accounts
	- whois.domaintools.com - WHOIS
	- search.censys.io - Domains, Subdomains, Hosts, OS, Infrastructure, Technologies used by site
	- www.netcraft.com/tools
	- dnsdumpster.com
	- pentest-tools.com
	- www.ip2location.com - Email Footprinting, Email Header Tracer
	- mxtoolbox.com
	- socialcatfish.com
	- shodan.io : search engine designed to detect devices and networks with vulnerabilities (connected to internet)
	- web-check.xyz : All-in-one OSINT tool for analysing any website
	- osint.sh : All in one Information Gathering Tools
	- osintframework.com : Collections of OSINT frameworks focused on gathering information from free tools and resources
	- www.semrush.com - SEO, content marketing, competitor research, PPC and social media marketing
- Extract Meta-deta from files:
	- exiftool : ExifTool is used to read and write metadata in various file types, such as JPEG images
	- pdfinfo : Portable Document Format (PDF) document information extractor (poppler-utils)
- CLI Tools:
	- whois : get whois information/record for domain
	- host : use for DNS lookups and convert names to IP addresses and vice versa
	- dig : Domain Information Groper (dig) retrieves information about DNS name servers
	- traceroute : route packets trace to network host
	- ip : show / manipulate routing, network devices, interfaces and tunnels (replaces deprecated: ifconfig, route, arp)
	- arp : show / manipulate Address Resolution Protocol (ARP) cache
	- tcpdump : TCP dump is packet analyser tool used to capture and analyse packets and network traffic in real-time over network
	- ifconfig : Interface Configuration (ifconfig) configures network interfaces (deprecated)
	- nslookup : Name Server Lookup (nsookup) queries DNS Servers interactively (deprecated)
	- netstat : print network connections, routing tables, interface statistics, masquerade connections, multicast memberships, etc. (deprecated)
	- route : show / manipulate the IP routing table (deprecated)
	- nslookup : query internet domain name servers (set type=a/cname)
	- photon : retrieve archived URLs of the target website from archive.org
	- theharvester : OSINT gathering tool (gathers names, emails, IPs, subdomains, and URLs by using multiple public resources)
	- sherlock - Search on social media accounts - personal info
	- whatweb : WhatWeb is a next-generation web scanner that identifies technologies used by websites
	- fierce : DNS reconnaissance tool locate non-contiguous IP space and hostnames against specified domains
	- dnsrecon : DNS (Domain Name System) reconnaissance tool
	- recon-ng : web reconnaissance framework used for penetration testing, vulnerability assessment
	- maltego : used to determine the relationships and real world links between people, groups of people, organizations, websites, Internet infrastructure, documents
	- FOCA : Fingerprinting Organizations with Collected Archives is a tool used mainly to find metadata and hidden information in the documents it scans
	- subfinder : subdomain discovery tool that helps attackers find valid subdomains for websites
	- sublist3r : fast subdomains enumeration tool for penetration testers
	- Recon-Dog : Reconnaissance Swiss Army Knife - uses APIs to collect information about the target system, including Censys, NS Lookup, Port Scan, CMS Detection, Whois Lookup, Honeypot Detection, Subdomain Finder, Reverse IP Lookup, and Technology Detection
	- BillCipher : Information gathering tools: DNS, Whois, GeoIP, Subnet, Port Scanner, Page Links, Zone Transfer, HTTP Header, Host Finder, IP Locator, Shared DNS, Robots.txt, Reverse IP, Email Finder, Subdomains, Admin Login, CloudFlare Bypass, Website Copier, Host Info
	- Wireshark : Wireshark is a network protocol analyzer that interactively captures and analyzes network traffic
AI Tools:
	- taranis.ai : advanced open source intelligence (OSINT) tool that leverages artificial intelligence to gather, analyze, and interpret publicly available data
	- ossinsight.io : OSS Insight uses AI to provide in-depth insights into the GitHub ecosystem, analyzing over 5 billion GitHub events
	- dorkgpt.com : AI-powered tool designed to assist Google Dorking, a technique used to find information that is not easily accessible through regular search queries
	- dorkgenius.com : AI-powered tool that automates Google Dorking and helps users generate advanced search queries to find specific information on the internet
	- googlewordsniper.eu : Google Word Sniper helps to refine search queries for more effective Google results. It identifies targeted keywords and phrases, making it easier to find specific information, hidden content, and niche data.
	- cylect.io : advanced AI-powered OSINT tool that integrates multiple databases into a user-friendly interface, providing a vast collection of resources for ethical hackers and enabling efficient and confident OSINT investigations
	- chatpdf.com : OSINT tool that leverages AI to analyze and extract information from PDF documents through a conversational interface
	- www.bardeen.ai : automation tool that can be used for OSINT by enabling users to streamline and automate data collection and analysis processes from various online sources
	- cobwebs.com : PenLink Cobwebs is an advanced AI-powered OSINT tool that specializes in gathering and analyzing data from various online sources. It offers comprehensive capabilities for collecting, processing, and visualizing information to support cybersecurity investigations.
	- exploreai.vercel.app : Explore AI is an AI-powered YouTube search engine that uses artificial intelligence to search for and extract information from YouTube videos, making it easier to access information for ethical hacking purposes.
	- app.anypicker.com : AnyPicker is a powerful visual web scraper and AI OSINT tool designed to extract data from websites without requiring coding skills.


--------------------------------------------------

# Network Scanning
Network scanning refers to a set of procedures used for identifying hosts, ports, and services in a network.

- nmap : Network Mapper scans networks to identify devices, open ports, services, and detect OS and service versions, automating network scanning
- hping3 : network tool used for security auditing and testing. It sends custom TCP/IP packets to hosts for tasks such as port scanning, firewall testing, network performance analysis, and DoS testing
- Metasploit : an open-source project that provides the infrastructure, content, and tools to perform penetration tests and extensive security auditing
- sx : command-line network scanner (github.com/v-byte-cpu/sx)
- Angry IP Scanner : Fast, lightweight tool for discovering devices on a network, scanning IPs, ports, and gathering host information (angryip.org)
- RustScan : Fast, modern port scanner designed to perform high-speed scanning of open ports on target machines (github.com/RustScan/RustScan)
- scanlogd : TCP port scan detection tool that detects and logs TCP port scans


# Paid Tools:
- MegaPing (magnetosoft.com)
- OpUtils (www.manageengine.com)
- SolarWinds Engineer’s Toolset (www.solarwinds.com/free-tools)
- NetScanTools Tools (www.netscantools.com/freeware.html)
- PRTG Network Monitor (www.paessler.com)
- Colasoft Ping Tool (www.colasoft.com)
- Advanced IP Scanner (www.advanced-ip-scanner.com)
- Splunk Enterprise Security (www.splunk.com)


--------------------------------------------------

# Enumeration
Enumeration is the process of extracting usernames, machine names, network resources, shares, and services from a system or network. In the enumeration phase, an attacker creates active connections with the system and sends directed queries to gain more information about the target.

- knockpy : Knock is a tool designed to quickly enumerate subdomains of a target domain through passive reconnaissance and dictionary scanning (passive)
- raccoon : Raccoon is a high-performance offensive security tool for reconnaissance and vulnerability scanning (active)
- subfinder : Fast passive subdomain enumeration tool that discovers valid subdomains using online passive sources (passive)
- turbolist3r : TurboList3r is a subdomain enumeration tool with automated analysis, focused on subdomain takeover

- nbtscan : Scan network for NetBIOS name information
- snmp-check : SNMP device enumerator
- snmpwalk : retrieve a subtree of management values using SNMP GETNEXT requests
- ldapsearch : LDAP search tool (ldapsearch ldap://<ip> -x)
- ntptrace : trace chain of NTP servers back to primary source
- rpcinfo : report RPC information - NFS (rpcinfo -p <ip>)
- showmount : show mount information for an NFS server (showmount -e <ip>)
- RPCScan : RPCScan communicates with RPC services and checks misconfigurations on NFS shares
- SuperEnum : SuperEnum includes a script that performs the basic enumeration of any open port
- DNS Zone Transfer with Dig:
	- dig ns <ip>
	- dig @<domain_name_server> <ip> axfr
- DNS Zone Transfer with DNSRecon: dnsrecon -t axfr -d <ip>
- DNS Cache Snooping:
	- Non-recursive method: dig @<dns_server_ip> <ip> A +norecurse
	- Recursive method: dig @<dns_server_ip> <ip> A +recurse
- DNSSEC Zone Walking:
	- LDNS: ldns-walk @<dns_server_ip> <ip>
	- DNSRecon: dnsrecon -z -d <ip>
- DNS Enumeration with OWASP Amass:
	- amass enum -d <ip>
	- Passive: amass enum -passive -d <ip>
	- Active enumeration through brute-forcing with specified wordlist: amass enum -active -d <ip> /usr/share/wordlists/amass/all.txt
- IPsec Enumeration - ISAKMP Port status: nmap –sU –p 500 <ip>
- ike-scan : Discover and fingerprint IKE (Internet Key Exchange) hosts (IPsec VPN servers)
- VoIP Enumeration with Session Initiation Protocol (SIP) protocol: svmap <ip>
- RPC Enumeration (Identify RPC service running):
	- nmap -sR <ip>
	- nmap -T4 –A <ip>
- SMB Enumeration (SMB service running):
	- nmap -p 445 -A <ip>
	- enum4linux : enumerate information from Windows and Samba systems


--------------------------------------------------

# Vulnerability Analysis/Assessment

# Vulnerability Classification:
- Misconfigurations/Weak Configurations
	- Network Misconfigurations
		- Insecure Protocols
		- Open Ports and Services
		- Errors
		- Weak Encryption
	- Host Misconfigurations
		- Open Permissions
		- Unsecured Root Accounts
- Application Flaws
	- Buffer Overflows
	- Memory Leaks (Valgrind)
	- Resource Exhaustion
	- Integer Overflows
	- Null Pointer/Object Dereference
	- DLL (Dynamic Link Library) Injection
	- Race Conditions
		- Time of Check/Time of Use
	- Improper Input Handling
	- Improper Error Handling
	- Code Signing Weakness
- Poor Patch Management
	- Unpatched Servers
	- Unpatched Firmware
	- Unpatched OS
	- Unpatched Applications
- Design Flaws
- Third-Party Risks
	- Vendor management
		- System integration
		- Lack of vendor support
	- Supply-chain risks
	- Outsourced code development
	- Data storage
	- Cloud-based vs. On-premises risks
- Default Installations/Default Configurations
- Operating System Flaws
- Default Passwords
- Zero-Day Vulnerabilities
- Legacy Platform Vulnerabilities
- System Sprawl/Undocumented Assets
- Improper Certificate and Key Management

# Types of Vulnerability Scanning:
- External Scanning
- Internal Scanning
- Host-based scanning
- Network-based Scanning
- Application Scanning
- Database Scanning
- Wireless Network Scanning
- Distributed Scanning
- Credentialed/Authenticated Scanning
- Non-Credentialed/Unauthenticated Scanning
- Manual Scanning
- Automated Scanning
- Cloud-based Scanning
- Mobile Application Scanning
- Physical Security Vulnerability Scanning
- IoT Device Vulnerability Scanning

# Vulnerability Assessment Solutions:
- Product-Based Solutions
- Service-Based Solutions
- Tree-Based Assessment
- Inference-Based Assessment

# Types of Vulnerability Assessment Tools:
- Host-Based Vulnerability Assessment Tools
- Depth Assessment Tools
- Application-Layer Vulnerability Assessment Tools
- Scope Assessment Tools
- Active and Passive Tools
- Location and Data Examination Tools
	- Network-Based Scanner
	- Agent-Based Scanner
	- Proxy Scanner
	- Cluster scanner

# Vulnerability Scoring Systems and Databases
- Common Vulnerability Scoring System (CVSS) - www.first.org
- MITRE Common Vulnerabilities and Exposures (CVE) - cve.mitre.org
- National Vulnerability Database (NVD) - nvd.nist.gov
- Common Weakness Enumeration (CWE) - cwe.mitre.org
- Exploit Database - www.exploit-db.com
- Vulnerability Database - vuldb.com
- Open Source Vulnerability Database - osv.dev

# Vulnerability Research Resources
- Microsoft Security Response Center (MSRC) - msrc.microsoft.com
- HackerStorm - www.hackerstorm.co.uk

# Vulnerability Assessment Tools
- nikto : Scan web server for known vulnerabilities
- skipfish : web application security scanner
- OpenVAS (www.openvas.org)
	- sudo docker run -d -p 443:443 --name openvas mikesplain/openvas
	- Launch OpenVAS: https://127.0.0.1 (Username: admin; Password: admin)
- Snort : Open Source Network Intrusion Prevention System (IPS)
- SmartScanner : AI-powered web vulnerability scanner that detects a wide range of threats, from SQL Injection and XSS to misconfigurations and cryptographic flaws. It supports various technologies, including REST APIs, modern frameworks, and popular CMS platforms, offering an intuitive interface and detailed reports. (www.thesmartscanner.com)


--------------------------------------------------

# Attack Tools
- nc : Netcat is a versatile networking tool for establishing arbitrary TCP and UDP connections, allowing reading from and writing to network connections
- gobuster : Gobuster is a Go-based tool for brute-forcing URIs, DNS subdomains, virtual hosts, and discovering open Amazon S3 buckets, Google Cloud buckets, and TFTP servers
- sqlmap : sqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers
- dnsspoof : dnsspoof is a DNS spoofer that intercepts DNS responses from the router and replaces them with spoofed DNS responses

# Assist Tools:
- Burp Suite : Burp Suite is a Java-based framework for web application penetration testing, allowing interception and manipulation of HTTP/HTTPS traffic between a browser and server. It includes tools for scanning, fuzzing, and analyzing web traffic, making it essential for manual web testing.

# Digital Forensics & Data Recovery:
- teskdsk : TestDisk is used to recover lost or damaged partitions and boot sectors
- photorec : PhotoRec is used to recover files from corrupted or formatted disks, or when the file system is damaged
- FTK : Forensic Toolkit is a forensic suite used for analyzing disk drives, memory, and emails


--------------------------------------------------

# System Hacking

## Gaining Access:

- Password Recovery/Cracking/Attacks Tools
	- Windows
		- pwdump7 : extracts LM and NTLM password hashes of local user accounts from the Security Account Manager (SAM) database
		- Rubeus : retrieve a TGT based on a user password/hash
		- Mimikatz : extract plaintext passwords, hashes, PINs, and Kerberos tickets from memory, as well as perform pass-the-hash, pass-the-ticket, and create Golden Tickets
		- DSInternals : Directory Services Internals PowerShell Module and Framework
		- adfsbrute : script to test credentials against Active Directory Federation Services (ADFS), allowing password spraying or bruteforce attacks
		- CrackMapExec : CME is versatile post-exploitation and lateral movement tool designed for penetration testing in Active Directory environments
		- Impacket : Impacket is a collection of Python classes for working with network protocols
		- L0phtCrack : L0phtCrack is a tool designed to audit passwords and recover applications
		- Responder : LLMNR, NBT-NS and MDNS poisoner
		- brutus : brute-force password-cracking tool, primarily designed for older Windows systems
		- Vindicate : LLMNR/NBNS/mDNS Spoofing Detection Toolkit for network administrators
		- Respounder : detects presence of responder in the network
		- got-responded : detect LLMNR and NBT-NS spoofing
	- crunch : generates wordlists based on specified character sets, lengths, and patterns for use in dictionary attacks
	- CeWL : Custom Word List Generator generates custom wordlists by crawling websites and extracting words based on specified parameters
	- hashID : tool to identify different types of hashes
	- John the Ripper : advanced offline password cracker that supports hundreds of hash and cipher types
	- Hashcat : Password recovery utility
	- hashcat-utils : powerful and versatile password recovery utility supporting a wide range of hash algorithms
	- RainbowCrack : password-cracking tool that uses rainbow tables to recover plaintext passwords from their hashed values
	- Hydra : fast and flexible password-cracking tool used for brute-force and dictionary attacks against various network services and protocols
	- Patator : multi-purpose brute-forcer with modular design and flexible usage
	- Ncrack : high-speed network authentication cracking tool
	- PyCrack : Advanced password-cracking tool supporting brute force, dictionary, and random attacks, capable of cracking files and hashes (e.g. PDF, ZIP, MS Excel, MS Word, MS PowerPoint, MD5, SHA-224, SHA-256, etc.)
	- Aircrack-ng : complete suite of tools to assess WiFi network security
	- BruteX : automates brute-force attacks against all services running on target
	- Secure Shell Bruteforcer : SSB - faster & simpler way to bruteforce SSH server

- Password Recovery Tools (Windows)
	- Elcomsoft Distributed Password Recovery (www.elcomsoft.com)
	- Lazesoft Recover My Password (www.lazesoft.com)
	- Passper WinSenior (passper.imyfone.com)
	- Passware Kit Forensic (www.passware.com)
	- PCUnlocker (www.top-password.com)

- Default Passwords
	- 192-168-1-1ip.mobi
	- cirt.net
	- default-password.info
	- www.fortypoundhead.com
	- www.routerpasswords.com

- Password Attacks
	- Active Online (Windows)
		- Hash Injection/Pass-the-Hash (PtH) Attack : Technique where an attacker uses a stolen NTLM hash instead of the plaintext password to authenticate and gain access to systems or resources - Mimikatz and Impacket (psexec.py)
		- LLMNR/NBT-NS Poisoning : Network attack that exploits the LLMNR and NBT-NS protocols to capture authentication credentials (NTLM hashes) from target system - Responder
		- Internal Monologue Attack : Stealthy technique used to extract NTLM hashes from compromised Windows machine without generating network traffic - Invoke-InternalMonologue
		- Cracking Kerberos Password : Attack involves brute-forcing or dictionary attacks on the encrypted password hashes associated with Kerberos authentication tickets to reveal plaintext passwords
			- AS-REP Roasting (Cracking TGT): Extract user accounts hash that do not require preauthentication then crack encrypted TGT hash (JtR/Hashcat) - Impacket (GetNPUsers.py)
			- Kerberoasting (Cracking TGS): Attacker authenticates to the Kerberos network, obtains a TGT, requests TGS tickets for specific services encrypted with service account hashes, and extracts them using tools like Rubeus (gain access to higher-privileged service accounts)
		- Pass-the-Ticket Attack : Using a stolen Kerberos ticket (TGT or TGS) to authenticate to other services or systems without needing the user's password, allowing attackers to gain unauthorized access using the victim's ticket - Mimikatz, Rubeus, Windows Credentials Editor
		- NTLM Relay Attack : Network attack where an attacker intercepts and relays NTLM authentication traffic to authenticate as the victim on another system without cracking the credentials - Responder, Impacket (ntlmrelayx)
	- Passive Online
		- Wire Sniffing : Packet sniffing is a form of wire sniffing or wiretapping in which hackers sniff credentials during transit by capturing Internet packets - Wireshark, tcpdump
		- Man-in-the-Middle and Replay Attacks
	- Offline
		- Rainbow Table Attack : Password-cracking technique that uses precomputed hash-value pairs stored in a table to quickly match and reverse hash values into plaintext passwords, bypassing the need for real-time brute-forcing - RainbowCrack (rtgen)
		- Distributed Network Attack : Brute-force technique that uses multiple distributed systems to crack encrypted files or passwords by leveraging their combined computational power - Exterro Password Recovery Toolkit (PRTK)

- Vulnerability Exploitation Tools
	- WES-NG : Windows Exploit Suggester - Next Generation is python-based tool that analyzes the output of the Windows systeminfo utility to identify vulnerabilities affecting the system and corresponding exploits

- AI-Powered Vulnerability Exploitation Tools
	- Nebula : AI-Powered Ethical Hacking Assistant
	- DeepExploit : DeepExploit utilizes a deep learning model to automate vulnerability identification and exploitation

- Vulnerability Exploitation Attacks/Tools
	- Buffer Overflow
		- Types:
			- Stack Based Buffer Overflow (smaller, static buffers)
			- Heap Based Buffer Overflow (larger, dynamic buffers)
		- Windows Buffer Overflow Exploitation
			- Steps involved in exploiting Windows based buffer overflow vulnerability:
				- Perform spiking: with netcat
				- Perform fuzzing: Fuzzing sends data to cause a buffer overflow, overwriting the EIP and revealing its location to inject shellcode
				- Identify the offset: Attackers use Metasploit's pattern_create and pattern_offset tools to identify the offset and exact location where the EIP register is being overwritten
				- Overwrite the EIP register: Overwriting the EIP identifies whether a register can be controlled and overwritten with malicious shellcode
				- Identify bad characters: Before injecting the shellcode into the EIP register, attackers identify bad characters that may cause issues in the shellcode
				- Identify the right module: Identify the right module of a vulnerable server that lacks memory protection
				- Generate shellcode: Generate the shellcode (with the msfvenom command) and inject it into the EIP register to gain shell access to the target vulnerable server
				- Gain root access
		- Return-Oriented Programming (ROP) Attack
		- Bypassing ASLR (Address Space Layout randomization) and DEP (Data Execution Prevention) Security Mechanism
			- Heap Spraying - flooding free space of target process’s memory heap
			- JIT (Just-In-Time) Spraying - execute arbitrary code by exploiting vulnerabilities in JIT compilation (web browsers)
	- Exploit Chaining
	- Domain Mapping and Exploitation with Bloodhound
	- Post Active Directory (AD) Enumeration using PowerView
		- Note: Disable the security monitoring option: Set-MpPreference -DisableRealtimeMonitoring $true
		- Enumerating Domain Users:
			- Get-NetUser : Retrieves information related to the current domain user
			- Get-NetLoggedon -ComputerName <computer-name> : Retrieves information related to the current active domain users
			- Get-UserProperty –Properties pwdlastset : Retrieves the date and time of the password last set for each domain user
			- Find-LocalAdminAccess : Retrieves users having local administrative privileges in the current domain (requires administrator privileges)
			- Invoke-EnumerateLocalAdmin : Retrieves users having local administrative privileges in the network/domain (requires administrator privileges)
			- Get-NetSession -ComputerName <computer_name> : Retrieves information related to the current user logged into the machine
		- Enumerating Domains:
			- Get-ADDomain : Retrieves information related to the current domain including its domain controllers (DCs)
			- Get-NetDomain : Retrieves information related to the current domain including its network/domain controllers
			- Get-DomainSID : Retrieves the security ID (SID) of the current domain
		- Enumerating Domain Policy:
			- Get-DomainPolicy : Retrieves the policy used by the current domain
			- (Get-DomainPolicy)."SystemAccess" : Retrieves information related to the policy configurations of the domain’s system access
			- (Get-DomainPolicy)."kerberospolicy : Retrieves information related to the domain’s Kerberos policy
		- Enumerating Domain Controllers (DCs)
			- Get-NetDomainController : Retrieves information related to the current domain controller (DC)
		- Enumerating Domain Computers:
			- Get-NetComputer : Retrieves the list of all computers existing in the current domain
			- Get-NetComputer | select operatingsystem,dnshostname : Retrieves the list of all operating systems and DNS host names in the current domain
			- Get-NetComputer - OperatingSystem "*Server 2022*" : Retrieves all the domain computers running on Windows Server 2022
			- Get-NetComputer -Ping : Retrieves all the live hosts or pingable host systems available in the current domain
		- Enumerating Domain Groups :
			- Get-NetGroup : Retrieves the list of all groups existing in the current domain
			- Get-NetGroup -Domain <targetdomain> : Retrieves the list of all groups existing in the specified domain
			- Get-NetGroup 'Domain Administrators' : Retrieves all information related to the specified group
			- Get-NetGroup “*admin*” : Retrieves all the groups containing admin in the group name
			- Get-NetGroupMember - GroupName "Domain Admins" : Retrieves all the members in the specified group
			- Get-NetGroup -UserName <"username"> : Retrieves the group name of the specified domain user
			- Get-NetLocalGroup - ComputerName <computername> : Retrieves all the group names of the specified domain computer
			- Get-NetLoggedon - ComputerName <DomainName> : Retrieves all the active logged-in users of the specified domain (requires administrator privileges)
			- Get-LastLoggedOn - ComputerName <DomainName> : Retrieves the last-logged-in user of the specified domain
		- Enumerating Domain Shares:
			- Invoke-ShareFinder -Verbose : Retrieves shares on the hosts in the current domain
			- Get-NetShare : Retrieves all the network shares existing in the current domain
			- Get-NetFileServer -Verbose : Retrieves the file server of the current domain
			- Invoke-FileFinder : Retrieves all the files in the current domain including files that store credentials
			- Find-DomainShare : Retrieves the shares in the domain
		- Enumerating Group Policies and OUs:
			- Get-NetGPO Get-NetGPO| select displayname : Retrieves the list of all the GPOs present in the current domain
			- Get-NetOU : Retrieves all the OUs present in the current domain
		- Enumerating Access-Control Lists (ACLs):
			- Get-NetPGO | %(Get-ObjectAcl -ResolveGUIDs -Name $_.Name) : numerating Access-Control Lists
			- Get-ObjectAcl - SamAccountName "users" - ResolveGUIDs : Retrieves the details of the ACLs for a specific group (users)
			- Get-NetGPO | %{Get-ObjectAcl -ResolveGUIDs - Name $_.Name} : Retrieves the users who have modification rights for a group
			- Invoke-ACLScanner - ResolveGUIDs : Retrieves all information about ACEs
			- Get-PathAcl -Path \\Windows11\Users : Retrieves the ACL linked with a specific path (works only with the shared folder)
			- Get-Acl : Retrieves the security descriptions for a resource such as a file or registry key
		- Enumerating Domain Trust and Forests:
			- Get-NetForest : Retrieves the information of the current forestRetrieves the information of the current forest
			- Get-NetForest -Forest <forest> : Retrieves the information of the specified forest
			- Get-NetForestDomain : Retrieves all domains in the current forest
			- Get-NetForestCatalog : Retrieves the details of the global catalogs for the current forest
			- Get-NetForestCatalog - Forest <forest> : Retrieves the details of the global catalogs for the specified forest
	- linWinPwn : Bash script that integrates Active Directory tools for enumeration (LDAP, RPC, ADCS, MSSQL, Kerberos), vulnerability checks (noPac, ZeroLogon, MS17-010, MS14-068), object modifications (password change, group additions, RBCD, Shadow Credentials), and password dumping (secretsdump, lsassy, nanodump, DonPAPI)
	- GhostPack Seatbelt : Seatbelt performs a number of security-oriented host-survey "safety checks" relevant from both offensive and defensive security perspectives (github.com/GhostPack/Seatbelt)
	- Buffer Overflow Detection Tools:
		- OllyDbg : OllyDbg is an assembler-level debugger for Microsoft Windows that dynamically traces stack frames and program execution, logging arguments of known functions
		- flawfinder : program that examines C/C++ source code and reports possible security weaknesses sorted by risk level
		- Splint : tool for statically checking C programs for security vulnerabilities and coding mistakes
		- Valgrind : An instrumentation framework for building dynamic analysis tools, Valgrind includes tools that can automatically detect memory management and threading bugs, as well as profile programs in detail (valgrind.org/info/tools.html)


## Privilege Escalation

- Types of Privilege Escalation
	- Horizontal Privilege Escalation (Same Level Privileges)
	- Vertical Privilege Escalation (Elevation of Privileges)
- Methods of Privilege Escalation
	- Privilege Escalation by Exploiting Vulnerabilities
	- Privilege Escalation Using DLL (Dynamic Link Library) Hijacking - Windows:
		- Spartacus : An automated DLL/COM hijacking toolkit that analyzes SysInternals Process Monitor logs to identify, exploit, and generate payloads for DLL and COM hijacking vulnerabilities
		- DLLirant : Tool to automatize the DLL Hijacking and DLL Proxying researches on a specified binary 
		- ImpulsiveDLLHijack : Automates the discovery and exploitation of DLL hijacking vulnerabilities in target binaries, with the hijacked paths identified later being weaponized during Red Team operations to evade EDR systems
		- PowerSploit : PowerShell Post-Exploitation Framework that is a collection of Microsoft PowerShell modules that aid penetration testers during all phases of an assessment
	- Privilege Escalation Using Dylib (dynamic library) Hijacking - MacOS:
		- Dylib Hijack Scanner : Scans a computer for applications that are either susceptible to dylib hijacking or have already been hijacked
	- Privilege Escalation Using Spectre and Meltdown Vulnerabilities:
		- Spectre and Meltdown are vulnerabilities found in the design of modern processor chips (AMD, ARM, and Intel). These vulnerabilities arise from performance and CPU optimizations in processors, such as branch prediction, out-of-order execution, caching, and speculative execution. Attackers can exploit these vulnerabilities to gain unauthorized access and steal sensitive system information, such as credentials and secret keys stored in the application's memory, to escalate privileges.
		- Spectre Vulnerability: Attackers can exploit this vulnerability to read adjacent memory locations of a process, accessing unauthorized information, and may even gain access to kernel memory or perform web-based attacks using JavaScript.
		- Meltdown Vulnerability: Attackers can exploit this vulnerability to escalate privileges by forcing an unprivileged process to read adjacent memory locations, such as kernel and physical memory, thereby revealing critical system information like credentials and private keys.
	- Privilege Escalation Using Named Pipe Impersonation - Windows:
		- In Windows OS, named pipes are used to facilitate legitimate communication between running processes.
		- In this technique, messages are exchanged between processes using a file. For example, if process A wants to send a message to process B, it writes the message to a file, and process B reads the message from that file.
	- Privilege Escalation by Exploiting Misconfigured Services - Windows:
		- Unquoted Service Paths: In Windows, services with unquoted executable paths can be exploited by attackers to elevate privileges when running under SYSTEM privileges.
		- Service Object Permissions: Misconfigured service permissions can allow attackers to modify or reconfigure service attributes, add users to the administrator group, and elevate privileges.
		- Unattended Installs: Unattended installation information, such as configuration settings used during the installation process, is stored in the Unattend.xml file and can be exploited by attackers to escalate privileges.
		- Modifiable Registry Autoruns and Configurations: Modifying certain registry entries that control the execution of programs, often exploiting weak or misconfigured permissions to gain higher privileges, execute malicious code, or persist on the system.
	- Pivoting and Relaying to Hack External Machines:
		- Pivoting and relaying are techniques used to gather detailed information about a target network after successfully compromising a target system. The compromised system acts as a bridge, enabling attackers to penetrate deeper into the target network and access other systems and resources that would otherwise be inaccessible from the attacking system.
		- Pivoting: Attackers use the pivoting technique to compromise a system, gain remote shell access on it, and further bypass the firewall to pivot via the compromised system to access other vulnerable systems in the network.
		- Relaying: Attackers use the relaying technique to access resources present on other systems via the compromised system in such a way that the requests to access the resources are coming from the initially compromised system.
	- Privilege Escalation Using Misconfigured NFS - Windows:
		- Attackers attempt to enumerate a misconfigured Network File System (NFS) to exploit it and gain root-level access to a remote server, as such misconfigurations allow them to escalate privileges from a regular or low-privileged user account.
	- Privilege Escalation by Bypassing User Account Control (UAC):
		- When attackers fail to escalate privileges with a simple payload, they attempt to evade Windows security features like UAC and exploit certain Windows applications to gain system-level access without triggering a UAC notification, even when UAC protection is enabled.
		- Techniques to Bypassing UAC Protection Using Metasploit:
			- Bypassing UAC Protection - exploit/windows/local/bypassuac
			- Through FodHelper Registry Key - exploit/windows/local/bypassuac_fodhelper
			- Through Eventvwr Registry Key - exploit/windows/local/bypassuac_eventvwr
			- Through COM Handler Hijacking - exploit/windows/local/bypassuac_comhijack
			- Via Memory Injection - exploit/windows/local/bypassuac_injection
	- Privilege Escalation by Abusing Boot or Logon Initialization Scripts:
		- Attackers exploit boot or logon initialization scripts to escalate privileges or maintain persistence on a target system. These scripts also enable attackers to perform various administrative tasks, allowing them to execute other programs on the system.
		- Windows Logon Script : Attackers establish persistence and escalate privileges on a system by embedding the path to their script in the registry key (HKEY_CURRENT_USER\Environment\UserInitMprLogonScript)
		- Mac Logon Script : In macOS, logon scripts are known as login hooks and allow attackers to establish persistence on a system, as they are executed automatically during system login. Attackers exploit these hooks to inject a malicious payload, elevate privileges, and maintain persistence.
		- Network Logon Scripts : Network logon scripts are assigned through Active Directory or GPOs. Attackers exploit these scripts to obtain local or administrator credentials, depending on the access configuration.
		- RC Scripts : Attackers exploit RC scripts by embedding a malicious binary, shell, or path in RC scripts such as rc.common or rc.local on Unix-based systems to escalate privileges and maintain persistence.
		- Startup Items : Attackers create malicious files or folders within the /Library/StartupItems directory to maintain persistence. Startup items are executed during bootup with root-level privileges.
	- Privilege Escalation by Modifying Domain Policy:
		- The domain policy consists of configuration settings that can be applied between domains in a forest environment. Attackers modify domain settings by altering group policies and trust relationships between domains. They may also deploy a fake domain controller to maintain a foothold and escalate privileges.
		- Group Policy Modification:
			- Group policies manage resources and configuration settings such as security options, registry keys, and domain members. By default, all user accounts have read access to GPOs, while write access is restricted to specific users or groups within the domain.
			- Attackers exploit the path <DOMAIN>\SYSVOL\<DOMAIN>\Policies\ to access and modify domain group policies, enabling activities like creating new accounts, disabling or modifying internal tools, transferring ingress tools, executing unwanted services, and extracting passwords in plaintext.
			- At <GPO_PATH>\Machine\Preferences\ScheduledTasks\ScheduledTasks.xml, attackers can modify the file to create a malicious scheduled task or job using scripts like New-GPOImmediateTask.
			- At <GPO_PATH>\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf, attackers may alter user rights (e.g., SeEnableDelegationPrivilege) to create a backdoor and then control the user account to modify group policy settings.`
		- Domain Trust Modification:
			- Domain trust objects provide information such as credentials, accounts, and authentication and authorization mechanisms used by domains. C:\Windows\system32>nltest /domain_trusts
			- Attackers use this utility to gather information about trusted domains and leverage it to add a domain trust or modify existing trust settings, enabling privilege escalation through Kerberoasting and pass-the-ticket attacks.
	- Retrieving Password Hashes of Other Domain Controllers Using DCSync Attack:
		- A domain controller (DC) in a Windows environment securely validates user requests, manages user accounts, provides authentication, and enforces domain security policies. Directory replication ensures data consistency across DCs, so updates like password changes are reflected across all controllers.
		- The DCSync attack targets selective DCs. Attackers with privileged access and domain replication rights use replication protocols to create a virtual DC. This allows them to request and extract sensitive data, such as NTLM password hashes. With this information, attackers can perform golden ticket attacks, account manipulation, LOTL attacks, and deploy ransomware.
		- Attackers use Mimikatz to perform DCSync attacks. Mimikatz includes a DCSync command that employs the Microsoft Directory Replication Service Remote Protocol (MS-DRSR) to mimic the behavior of a legitimate domain controller (DC).
		- Retrieve the NTLM password hashes of an administrator account: mimikatz “lsadump::dcsync /domain:(domain name) /user:Administrator”
	- Privilege Escalation by Abusing Active Directory Certificate Services (ADCS):
		- Active Directory Certificate Services (ADCS) is commonly deployed across the AD environment to manage certificates for applications, users, systems, and other entities within the network.
		- Misconfigured ADCS templates can create critical vulnerabilities that attackers can exploit for malicious activities, such as stealing credentials, escalating privileges, and establishing persistence.
		- Attackers can use tools like Certipy to identify and exploit misconfigured ADCS templates.
		- Certipy : Certipy is an offensive tool used for enumerating and exploiting Active Directory Certificate Services (ADCS).
	- Other Privilege Escalation Techniques:
		- Access Token Manipulation:
			- In Windows operating systems, access tokens determine the security context of a process or thread, including the user's identity and privileges. After a user is authenticated, the system generates an access token, which is used by every process the user executes. The system verifies the access token when a process accesses a secured object.
			- Any Windows user can modify these access tokens, making the process appear to belong to a different user than the one who started it, thus adopting the new token's security context. For example, administrators typically log in as normal users and use the "runas" command to execute tools with elevated privileges. Attackers can exploit this to access other users' tokens or generate spoofed tokens, escalating privileges and performing malicious actions while evading detection.
		- Parent PID Spoofing:
			- Attackers attempt to bypass internal security mechanisms and escalate privileges by spoofing the parent process ID (PPID) of a newly created process. New processes typically inherit their PPID from their parent unless explicitly specified. This can be done by providing a PPID for the new process via the CreateProcess API. The API call includes specific arguments that determine which PPID to use.
			- The PPID can be set to that of system processes like svchost.exe or consent.exe, which are associated with Windows User Account Control (UAC). Attackers exploit these methods to bypass security restrictions on process spawning, evade tools that analyze parent-child relationships, and maintain persistence for privilege escalation.
		- Application Shimming:
			- Windows operating systems use the Windows Application Compatibility Framework, which includes "shims," to ensure compatibility between older and newer versions. For example, shimming allows programs designed for Windows XP to run on Windows 11. Shims act as a buffer between the program and the OS, checking if the program requires access to the shim database and using API hooking to redirect code for compatibility.
			- Shims installed by the default Windows installer (sbinst.exe) are stored at %WINDIR%\AppPatch\sysmain.sdb and in the registry at HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB. Running in user mode, shims can't modify the kernel but can be exploited to bypass UAC, inject malicious DLLs, capture memory addresses, etc. Attackers use these to disable Windows Defender, escalate privileges, install backdoors, and perform other malicious activities.
		- Filesystem Permission Weakness:
			- Many processes in Windows operating systems automatically execute binaries as part of their functionality or to perform specific actions. If the filesystem permissions for these binaries are misconfigured, an attacker can replace the legitimate binary with a malicious one, and the process will execute it.
			- If the process running the binary has elevated permissions, the malicious binary will also execute with those higher privileges, potentially including SYSTEM privileges. Attackers exploit this vulnerability to replace legitimate binaries with malicious ones, enabling privilege escalation. This technique is often used to manipulate Windows service binaries and self-extracting installers.
		- Path Interception:
			- Path interception is a technique where an attacker places a malicious executable in a specific path, causing the application to execute it instead of the legitimate target. Attackers can exploit various flaws or misconfigurations to perform path interception, such as unquoted paths (e.g., service paths and shortcut paths), misconfigured path environment variables, and search order hijacking.
		- Abusing Accessibility Features:
			- Attackers can establish persistence and escalate privileges by embedding and executing malicious code within Windows accessibility features. These features can be activated using key combinations even before a user logs into the system, allowing attackers to manipulate them and gain backdoor access without needing to log in.
			- In a Windows environment, these programs are typically stored in C:\Windows\System32\ and can be triggered by pressing specific keys during system reboot. Attackers can escalate privileges by replacing one of the accessibility features with cmd.exe or by modifying registry entries to launch malicious binaries when the key combination is pressed at the login screen. This technique enables attackers to gain system-level access.
			- Accessibility features abused by attackers:
				- On-screen keyboard: C:\Windows\System32\osk.exe
				- Magnifier: C:\Windows\System32\Magnify.exe
				- Narrator: C:\Windows\System32\Narrator.exe
				- Display switcher: C:\Windows\System32\DisplaySwitch.exe
				- App switcher: C:\Windows\System32\AtBroker.exe
				- Sticky keys: C:\Windows\System32\sethc.exe
		- SID-History Injection:
			- In Windows, a Security Identifier (SID) is a unique value assigned to each user and group account by the domain controller (DC) at the time of creation. Active Directory (AD) accounts can store multiple SID values in the SID-history attribute, which is used when migrating a user from one domain to another.
			- Attackers exploit this feature by injecting the SID of an administrator or equivalent account with higher privileges into the compromised user account's SID-history attribute. This injection can elevate the user's privileges, allowing the attacker to access restricted resources or remote systems. Attackers can also move laterally within the domain by using further techniques, such as accessing remote services, SMB/Windows admin shares, or Windows Remote Management.
		- COM Hijacking:
			- The Component Object Model (COM) is an interface framework in Windows environments that allows one software component to interact with another without being aware of its actual implementation. Attackers exploit COM objects by hijacking valid references and replacing them with their own, allowing them to infect the target system and achieve persistence.
			- This process involves modifying or replacing object references with malicious content in the Windows Registry. When a user executes the commonly used object, the malicious code is automatically triggered, enabling the attacker to maintain persistence and potentially escalate privileges associated with the object.
			- COM hijacking techniques:
				- Exploiting the registry loading process by creating a malicious user object under the HKEY_CURRENT_USER\Software\Classes\CLSID\ registry key, which is loaded by the system before the HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID\ registry key.
				- Interchanging legitimate DLLs or executable names with malicious payloads, causing the payloads to execute when the legitimate DLLs or executables are run.
				- Exploiting orphaned requests made by system components that are not yet defined in the registry, creating malicious COM objects for those requests in the HKEY_CURRENT_USER registry and mapping them to malicious payloads hidden in the file system.
		- Scheduled Tasks in Windows:
			- Scheduled tasks allow users to automate routine tasks on a computer. Windows includes utilities such as at and schtasks. A user with administrator privileges can use these utilities, along with Task Scheduler, to schedule programs or scripts to run at specific dates and times. If the user provides proper authentication, they can also schedule tasks remotely using Remote Procedure Call (RPC).
			- Attackers can exploit this technique to execute malicious programs at system startup, maintain persistence, perform remote execution, escalate privileges, etc.
		- Scheduled Tasks in Linux:
			- Linux utilizes cron or crond, an instruction-based utility, for automating task scheduling. Attackers exploit this utility to trigger malicious payloads when a specific task is scheduled for execution. The scheduler allows users with administrator privileges to configure cron jobs and execute them at specified times. cron runs commands from the crontab file, typically located at /etc/crontab.
			- Attackers can escalate privileges by modifying scripts executed by cron in /etc/crontab. By altering these scripts, attackers can ensure malicious code is executed automatically during system reboot, potentially gaining root privileges.
		- Launch Daemon:
			- During the macOS boot process, launchd is executed to complete the system initialization. It loads parameters for each launch-on-demand system-level daemon found in /System/Library/LaunchDaemons and /Library/LaunchDaemons. These daemons have associated property list files (plists), which are linked to executables that run during boot.
			- Attackers can create and install a new launch daemon configured to execute at boot time by using launchd or launchctl to load plists into the appropriate directories. Weak configurations may allow attackers to alter the executable of an existing launch daemon, enabling them to maintain persistence or escalate privileges.
		- Plist Modification:
			- In macOS, plist (property list) files contain all the necessary information to configure applications and services. These files specify when programs should execute, the executable file path, program parameters, essential OS permissions, etc. Plist files are stored in specific locations, such as /Library/Preferences (which execute with elevated privileges) and ~/Library/Preferences (which execute with user-level privileges).
			- Attackers can access and modify these plist files to execute malicious code on behalf of a legitimate user, using them as a persistence mechanism and to escalate privileges.
		- Setuid and Setgid:
			- In Linux and macOS, when an application uses the setuid or setgid flags, the application executes with the privileges of the owning user or group, respectively. Normally, applications run under the current user’s privileges. However, there are situations where programs need to be executed with elevated privileges, even though the user running the program does not require them.
			- In such cases, the setuid or setgid flags can be set for the application. An attacker can exploit applications with the setuid or setgid flags to execute malicious code with elevated privileges.
		- Web Shell:
			- A web shell is a web-based script that provides access to a web server. Web shells can be created on various operating systems, including Windows, Linux, and macOS. Attackers use web shells to inject malicious scripts onto a web server, enabling them to maintain persistent access and escalate privileges. A web shell acts as a backdoor, allowing attackers to gain access and control over a remote server.
			- Typically, a web shell runs under the current user’s privileges. Using a web shell, an attacker can escalate privileges by exploiting local system vulnerabilities. Once privileges are escalated, the attacker can install malicious software, modify user permissions, add or remove users, steal credentials, read emails, etc.
		- Abusing Sudo Rights:
			- Sudo (substitute user do) is a UNIX and Linux-based system utility that allows users to run commands as a superuser or root, using the security privileges of another user. The /etc/sudoers file contains the configuration for sudo rights, detailing access permissions, including which commands can be run with or without a password, for each user or group.
			- Attackers can exploit sudo to escalate their privileges and run programs that normal users are not authorized to execute. For example, if an attacker has sudo rights to run the cp command, they could overwrite the /etc/sudoers or /etc/shadow files with their own malicious files. By modifying the content of the sudoers file, the attacker could alter permissions to run restricted commands or programs, enabling further attacks on the system.
		- Abusing SUID and SGID Permissions:
			- Set User Identification (SUID) and Set Group Identification (SGID) are access permissions assigned to program files in UNIX-based systems. These permissions allow users to execute a program with temporarily elevated or root privileges in order to perform a specific task. Files with SUID and SGID rights run with higher privileges than those of the user running the program.
			- In Linux, certain commands and binaries can be exploited by attackers to escalate their privileges from non-root users to root, if the SUID and SGID flags are set. Some of the executable commands that attackers can use to spawn a shell and escalate privileges include nmap, vim, less, more, bash, cat, cp, echo, find, nano, and others.
			- Find SUID and SGID files in the target system:
				- Find SUID: find / -perm -u=s -type f 2>/dev/null
				- Find GUID: find / -perm -g=s -type f 2>/dev/null
		- Kernel Exploits:
			- Kernel exploits refer to programs that take advantage of vulnerabilities in the kernel to execute arbitrary commands or code with elevated privileges. By successfully exploiting these kernel vulnerabilities, attackers can gain superuser or root-level access to the target system. To execute a kernel exploit, attackers typically need specific configuration details of the target system.
			- OS, kernel version, and architecture of the target system:
				- OS: cat /etc/issue
				- Kernel version: uname -a
				- Architecture: cat /proc/version
			- Detect kernel exploits for escalating privileges: www.exploit-db.com -> linprivchecker.py
		- Abusing '.' in the Path:
			- Adding . to the PATH allows users to execute binaries or scripts from the current directory. While convenient, this practice poses a security risk. If an attacker gains access to a system where a privileged user runs scripts from various directories, they can manipulate the PATH to include a malicious directory.
			- For example, by placing a malicious script named ls in the attacker-controlled directory, the system will execute it instead of the legitimate ls command. This enables the attacker to run arbitrary commands, potentially escalating privileges if the user has elevated permissions.
		- Abusing Elevation Control Mechanism on macOS:
			- Attackers may exploit the AuthorizationExecuteWithPrivileges API for privilege escalation. This API is designed to allow developers to perform operations requiring root privileges, such as software installation or updates. However, it lacks proper validation to verify whether root access requests come from a trusted source.
			- Attackers can exploit this vulnerability to gain root privileges, enabling them to install malicious software and establish persistence on victim systems. When this API is invoked, the user is prompted for their credentials without any verification of the program’s source or integrity. Additionally, the program using the API may load world-writable files, which can be modified by attackers to execute malicious actions with elevated privileges.
		- Process Injection via Ptrace System Calls:
			- Attackers may exploit the ptrace (process trace) system call to inject malicious code into running processes, allowing them to evade process-based defenses and potentially escalate privileges. The ptrace system call enables attackers to debug a process, monitoring and manipulating its memory and register values.
			- Typically, ptrace injection involves writing arbitrary code into a running process (e.g., using malloc) and then using PTRACE_SETREGS to set the register that contains the next instruction to execute. Alternatively, attackers can use PTRACE_POKETEXT or PTRACE_POKEDATA to copy data into specific addresses in the target process's memory, such as the address of the next instruction to execute.
		- Abusing Microsoft Software Installer (MSI):
			- In Windows, MSI files act as databases that contain the dependencies and instructions necessary for installing and removing software. They also allow developers to execute additional scripts during installation, removal, or repair through Custom Actions. During software installation, MSI files are stored in the C:\Windows\Installer directory with randomized names and a .msi extension.
			- This setup enables regular users to use the "repair" functionality to fix issues like missing files, broken shortcuts, invalid registry entries, and other malfunctions. When invoked, the "repair" process can trigger critical actions, including file creation and execution, under the NT AUTHORITY\SYSTEM account, even when initiated by a standard user.
			- If not properly managed, this can pose significant risks. Poorly configured Custom Actions running as NT AUTHORITY\SYSTEM can be exploited by attackers to elevate privileges. Misconfigurations may allow file operations in directories writable by standard users, enabling attackers to modify files used by NT AUTHORITY\SYSTEM and execute arbitrary code, ultimately escalating their privileges.
		- Abusing Windows Filtering Platform (WFP) - NoFilter Attack:
			- The NoFilter attack is a privilege escalation technique that exploits the Windows Filtering Platform (WFP) on Windows 11 systems to gain system-level privileges. This method allows attackers to infiltrate deep into the operating system, run malicious child processes, execute malware with NT AUTHORITY\SYSTEM privileges, or even impersonate other logged-in users to maintain persistence without detection.
			- In this attack, the attacker first identifies the BfeRpcOpenToken method in the WFP by invoking WinAPI through RPC mapping using tools like RPC Mapper. The attacker then exploits the WFP to retrieve a handle to the access token of another process with system-level privileges from the NT handle table. After obtaining the handle to the targeted access token, the attacker uses it to create a copy of the token.
			- Methods for duplicating the acquired access token without triggering detection:
				- Token duplication via WfpAle component : This involves calling the WfpAleProcessTokenReference method in Windows, which causes the TCP/IP driver to duplicate the token and store it in the hash table. The LUID returned by the driver can be used to retrieve the duplicated access token.
				- Token duplication via IPsec connection : This method involves manipulating a user service to create an IPsec connection with the TCP/IP driver, which then duplicates the token and stores it in the hash table. Since the LUID of the token is not returned in this process, the token can only be retrieved by brute-forcing the LUID, which ranges from 1 to 4096.
			- Once the token is duplicated, the attacker can escalate privileges and perform high-level operations on the system, including duplicating tokens from services like LSM, Schedule, and Winmgmt.
- Privilege Escalation Tools
	- BeRoot : Post-exploitation tool designed to identify common misconfigurations that could lead to privilege escalation, focusing solely on potential escalation paths without performing any exploitation or comprehensive system assessment.
	- pwncat : Pwncat is a command and control framework that enhances a basic reverse or bind shell by providing raw terminal access, automated enumeration, file transfer, persistence installation, and privilege escalation capabilities, turning it into a fully-featured exploitation platform.
	- linpostexp : Linux post exploitation enumeration and exploit checking tools (github.com/reider-roque/linpostexp)
	- traitor : Automated Linux privilege escalation tool that exploits common misconfigurations and vulnerabilities, such as gtfobins, pwnkit, dirty pipe, and vulnerable +w docker.sock permissions, to quickly escalate privileges and gain a root shell.
	- PEASS-ng : Privilege Escalation Awesome Scripts - Next Generation is a collection of post-exploitation tools designed to aid in privilege escalation on Windows and Linux systems. It automates the discovery of potential privilege escalation vectors by scanning for misconfigurations, vulnerable services, weak permissions, and known exploits, providing detailed information and scripts to escalate privileges.
	- Windows Exploit Suggester : This tool compares a target's patch levels against the Microsoft vulnerability database to detect potential missing patches. It also notifies the user if public exploits or Metasploit modules are available for the missing bulletins.
	- PowerSploit : PowerShell Post-Exploitation Framework that is a collection of Microsoft PowerShell modules that aid penetration testers during all phases of an assessment
	- FullPowers : Proof-of-Concept tool I made for automatically recovering the default privilege set of a service account including SeAssignPrimaryToken and SeImpersonate.
- Tools for Defending against DLL and Dylib Hijacking
	- Dependency Walker : Scans Windows modules, builds a dependency tree, lists exported functions, and helps troubleshoot issues like missing modules, import/export mismatches, and initialization failures.
	- Dylib Hijack Scanner : Dylib Hijack Scanner (DHS) is a utility that scans the computer for applications that are either susceptible to dylib hijacking or have been hijacked.
	- DLL Hijack Audit Kit : A toolkit that detects applications vulnerable to DLL hijacking (released in 2010).
	- DLLSpy : A tool that detects DLL hijacking in running processes, services, and their binaries.
	- InSpectre : Examine and understand the hardware and software capabilities of any Windows system to prevent Meltdown and Spectre attacks.
	- Spectre & Meltdown Checker : A shell script to assess a system's resilience against the various transient execution CVEs published since early 2018 and provide guidance on how to mitigate them.


## Maintaining Access
Use Different Techniques to Conceal Malicious Programs and Maintain Remote Access to the System.

- Executing Applications
	- When attackers execute malicious applications remotely on a victim’s machine, it is referred to as "owning" the system, enabling them to gather information for exploitation or privacy breaches, gain unauthorized access to system resources, exfiltrate data, capture screenshots, and install backdoors for sustained access.
	- Malicious Programs Executed by Attackers on Target Systems:
		- Backdoors
		- Crackers
		- Keyloggers
		- Spyware
	- Remote Code Execution Techniques:
		- Exploitation for Client Execution:
			- Web-Browser-Based Exploitation
			- Office-Applications-Based Exploitation (MS Office, Email Applications)
			- Third-Party Applications-Based Exploitation (Adobe Reader, Flash, etc.)
		- Service Execution
			- System services are backend programs in an OS. Attackers exploit them by running binaries or commands that interact with tools like the Service Control Manager, creating or modifying services to escalate privileges or maintain access.
		- Windows Management Instrumentation (WMI)
			- WMI, a Windows feature, manages system resources locally and remotely. Attackers exploit it to access systems, gather data, and execute code to maintain access.
		- Windows Remote Management (WinRM)
			- WinRM is a Windows protocol that enables users to run executable files and modify system services or the registry on remote systems. Attackers exploit WinRM to execute payloads and facilitate lateral movement.
	- Tools for Executing Applications:
		- Dameware Remote Support - Solarwinds
		- Ninja : A privilege escalation detection and prevention system for GNU/Linux hosts
		- Pupy : Open-source, cross-platform remote administration tool (RAT) and post-exploitation framework that executes in memory, leaves a low footprint, and supports multiple communication transports and process migration
		- PsExec : PsExec is a lightweight telnet-replacement utility that allows an attacker to execute processes on remote systems with full interactivity, without needing to install client software on the remote machines.
	- Keyloggers
		- Types of Keystroke Loggers:
			- Hardware Keylogger
				- PC/BIOS Keylogger
				- Keylogger Keyboard
				- External Keylogger
					- PS/2 and USB Keylogger
					- Acoustic/CAM Keylogger
					- Bluetooth Keylogger
					- Wi-Fi Keylogger
			- Software Keylogger
				- Application Keylogger
				- Kernel/Rootkit/Device Driver Keylogger
				- Hypervisor-based Keylogger
				- Form Grabbing Based Keylogger
				- JavaScript Based Keylogger
				- Memory Injection Based Keylogger
		- Keyloggers:
			- KeyGrabber (www.keydemon.com) - HW
			- KeyGrabber USB (www.keelog.com) - HW
			- KeyCarbon (www.keykatcher.com) - HW
			- Keyboard logger (www.detective-store.com) - HW
			- KeyGhost (www.keyghost.com) - HW
			- KEYKatcher (keykatcher.com) - HW
			- Spyrix Personal Monitor (www.spyrix.com) - SW Windows
			- REFOG Personal Monitor (www.refog.com) - SW Windows
			- All In One Keylogger (www.relytec.com) - SW Windows
			- Revealer Keylogger Pro (www.logixoft.com) - SW Windows
			- NetBull (www.netbull.com) - SW Windows
			- Spytector (www.spytector.com) - SW Windows
			- Hoverwatch (www.refog.com) - SW Mac
			- Spyrix Keylogger for Mac (www.spyrix.com) - SW Mac
			- CleverControl (clevercontrol.com) - SW Mac
			- FlexiSPY (www.flexispy.com) - SW Mac
			- KidLogger (kidlogger.net) - SW Mac
			- Perfect Keylogger for Mac (www.blazingtools.com) - SW Mac
	- Spywares
		- Types of Spyware:
			- Desktop Spyware
			- Email Spyware
			- Internet Spyware
			- Child-Monitoring Spyware
			- Screen-Capturing Spyware
			- USB Spyware
			- Audio Spyware
			- Video Spyware
			- Print Spyware
			- Telephone/Cellphone Spyware
			- GPS Spyware
		- Spyware Tools:
			- Spytech SpyAgent (www.spytech-web.com)
			- Spyrix Personal Monitor (www.spyrix.com)
			- CurrentWare (www.currentware.com)
			- FlexiSPY (www.flexispy.com)
			- NetVizor (www.netvizor.net)
			- SoftActivity Monitor (www.softactivity.com)
			- SoftActivity TS Monitor (www.softactivity.com)
			- USB Monitor (www.hhdsoftware.com)
			- USBDeview (www.nirsoft.net)
			- Advanced USB Port Monitor (www.aggsoft.com)
			- Free USB Analyzer (freeusbanalyzer.com)
			- TheOneSpy (www.theonespy.com)
			- Snooper (www.snooper.se)
			- iSpy (www.ispyconnect.com)
			- Perfect IP Camera Viewer (www.perfect-surveillance.com)
			- Optiview VMS (optiviewusa.com)
			- Eyeline Video Surveillance Software (www.nchsoftware.com)
			- mSpy (www.mspy.com)
			- XNSPY (xnspy.com)
			- iKeyMonitor (ikeymonitor.com)
			- ONESPY (onespy.in)
			- Highster Mobile (www.highstermobiles.com)
			- SPYERA (spyera.com)
			- Snoopza (snoopza.com)
			- MobiStealth (www.mobistealth.com)
			- FlexiSPY (www.flexispy.com)
			- Mobile Tracker Free (mobile-tracker-free.com)
	- Anti-Keyloggers (Anti-Keystroke Loggers)
		- Zemana AntiLogger (zemana.com)
		- GuardedID (www.guardedid.com) 
		- KeyScrambler (www.qfxsoftware.com) 
		- Oxynger KeyShield (www.oxynger.com) 
		- Ghostpress (schiffer.tech) 
		- SpyShelter (www.spyshelter.com)
	- Anti-Spyware
		- SUPERAntiSpyware (www.superantispyware.com)
		- Kaspersky Total Security 20 (support.kaspersky.com) 
		- SecureAnywhere Internet Security Complete (www.webroot.com) 
		- Avast One (www.avast.com) 
		- MacScan 3 (www.securemac.com) 
		- Malwarebytes (www.malwarebytes.com)
- Hiding Files
	- Rootkits
		- A rootkit is a stealthy malware program that enables attackers to gain and maintain unauthorized root-level access to a system while hiding their presence and malicious activities by modifying operating system components and utilities.
		- System hooking is the process of modifying and replacing the original function pointer with one provided by the rootkit in stealth mode. Inline function hooking is a technique in which a rootkit modifies some of the bytes of a function within core system DLLs (such as kernel32.dll and ntdll.dll), inserting an instruction so that any process calls are directed to the rootkit first.
		- Types of Rootkits:
			- Hypervisor-Level Rootkit : Hypervisor-level rootkits exploit hardware features like Intel VT and AMD-V to run in Ring-1, hosting the target OS as a virtual machine and intercepting all its hardware calls by altering the boot sequence to load themselves instead of the original virtual machine monitor.
			- Hardware/Firmware Rootkit : Hardware or firmware rootkits embed persistent malware in hardware components like the BIOS, hard drive, or network card, evading detection by hiding in firmware, which is rarely inspected for code integrity.
			- Kernel-Level Rootkit : A kernel-level rootkit operates in Ring-0 with the highest OS privileges, modifying kernel code or adding malicious code via device drivers (Windows) or loadable kernel modules (Linux). These rootkits are hard to detect, can destabilize the system if buggy, and can intercept or manipulate OS operations.
			- Boot-Loader-Level Rootkit : Boot-loader-level rootkits, or bootkits, operate by modifying or replacing the legitimate boot loader, allowing them to activate before the OS starts.
			- Application-Level/User-Mode Rootkit : An application-level/user-mode rootkit runs in Ring-3 alongside other applications, exploiting API behavior to replace standard application files (application binaries) or modify existing applications with patches or injected malicious code.
			- Library-Level Rootkits : Library-level rootkits operate high in the OS, patching, hooking, or replacing system calls with backdoor versions to conceal the attacker’s presence by hiding information.
			- Memory Rootkits : Memory rootkits, or volatile rootkits, are malware that reside solely in a system's RAM, leaving no traces on disk. Unlike traditional rootkits, they operate entirely in volatile memory, making them more elusive and harder to detect.
		- Rootkit Softwares:
			- FudModule Rootkit : The FudModule Rootkit exploits a zero-day admin-to-kernel vulnerability in the Windows AppLocker driver (appid.sys) and employs DKOM techniques to bypass various kernel security mechanisms, thereby gaining kernel-level access. (decoded.avast.io)
			- Fire Chili Rootkit : The Fire Chili rootkit is a sophisticated malware that exploits the Log4Shell vulnerability to enable espionage and data exfiltration. Operating at the kernel level, it allows attackers to intercept, modify, or hide system calls, processes, and network connections, providing long-term remote control and data theft capabilities. (www.fortinet.com)
			- CopperStealer : CopperStealer is a type of malware designed to steal sensitive information from infected systems, primarily focusing on credentials such as login details, cookies, and saved passwords from web browsers. The CopperStealer rootkit is a variant of the CopperStealer malware that incorporates rootkit functionalities. It not only steals sensitive information like login credentials, cookies, and cryptocurrency wallet data but also uses rootkit techniques to hide its presence on the infected system.
			- Syslogk : The Syslogk rootkit is a sophisticated piece of malware targeting Linux systems, designed to operate covertly and evade detection. It installs itself as a kernel module, allowing it to intercept and manipulate system logs, effectively concealing its presence and activities. Syslogk enhances its stealth by removing its own entry from the list of installed kernel modules, making it challenging for system administrators to detect.
			- Adore-Ng Rootkit : The Adore-Ng rootkit is a Linux-based rootkit originally developed as an open-source tool to conceal the presence of malicious software and activities on a compromised system. It is an enhanced version of the Adore rootkit. Operating at the kernel level, Adore-Ng allows attackers to intercept and modify critical system operations, making it difficult for security tools and system administrators to detect.
			- Stealthy Universal Rootkit : The Stealthy Universal Rootkit (SUR) is a covert and versatile rootkit targeting multiple operating systems, including Windows, Linux, and macOS. Operating at the kernel level, it manipulates system processes and files while evading detection using advanced techniques. SUR ensures persistent access, allowing attackers to remotely control the system, exfiltrate data, and install additional malware, all while remaining hidden from security tools.
			- Reptile Rootkit : The Reptile rootkit is a Linux-based rootkit that operates at the kernel level, allowing attackers to gain persistent control over a system while remaining hidden. It uses advanced stealth techniques to conceal files, processes, and network connections, making it difficult to detect and remove, while providing remote access to compromised systems.
			- CosmicStrand : The CosmicStrand rootkit is a UEFI-based rootkit that infects a computer's firmware, giving attackers deep, persistent control over the system. It operates below the OS level, evading detection by security software and surviving OS reinstallation. This rootkit allows remote control, data theft, and the installation of additional malware, making it a significant security threat.
		- Rootkit Detection Techniques :
			- Integrity-Based Detection : Integrity-based detection serves as an alternative to both signature and heuristic-based detection. Tools like Tripwire and AIDE are initially run on a clean system to create a baseline of system files, which are stored in a database. The detection process compares the current filesystem, boot records, or memory snapshot with the trusted baseline, identifying malicious activity by detecting differences between the two.
			- Signature-Based Detection : Signature-based detection identifies rootkits by comparing system processes and files to a database of known rootkit fingerprints. It scans system files and kernel memory to detect malicious programs, including hidden rootkits. However, its effectiveness is limited, as rootkits often hide files or interrupt detection software’s execution path.
			- Heuristic/Behavior-Based Detection : Heuristic-based detection identifies rootkits by recognizing deviations in normal system behavior, also known as behavioral detection. It can detect new, unknown rootkits by spotting irregularities, such as execution path hooking, that differ from standard system patterns.
			- Runtime Execution Path Profiling : Runtime execution path profiling compares the execution paths of system processes and files. Rootkits destabilize routines by adding new code to the execution path. This method hooks instructions before and after routines, as they may differ significantly.
			- Cross-View-Based Detection : Cross-view-based detection assumes the OS has been subverted and enumerates system files, processes, and registry keys using common APIs. It compares this data with a dataset gathered through an algorithm that avoids manipulation. This method relies on the fact that API hooking or kernel manipulation taints the data returned by the OS, allowing for detection of tampered information.
			- Alternative Trusted Medium : The alternative trusted medium technique is a reliable method for detecting rootkits. It involves shutting down the infected system, booting from trusted media like a USB drive, and scanning the OS storage for rootkit traces, which can then be removed to restore the system.
			- Analyzing Memory Dumps : Memory dump analysis involves dumping and analyzing the system's volatile memory (RAM) to detect rootkits. It captures a snapshot of the entire system, process, or kernel, enabling offline forensic analysis. Specialized hardware may be needed to create the memory dump.
			- Virtualization-Based Analysis : Virtualization-based analysis uses introspection techniques to monitor guest operating systems for virtual rootkit activity. Security solutions run within the hypervisor to detect and mitigate virtual rootkits.
		- Anti-Rootkits:
			- GMER (www.gmer.net)
			- Stinger (www.trellix.com)
			- Avast One (www.avast.com)
			- TDSSKiller (usa.kaspersky.com)
			- Malwarebytes Anti-Rootkit (www.malwarebytes.com)
			- AVG Rootkit Scanner (www.avg.com)
	- NTFS Data Stream
		- The NTFS filesystem stores files using two primary data streams: the first holds the security descriptor, such as file permissions, and the second contains the actual file data. Alternate Data Streams (ADS), a feature of NTFS, attach additional data to a file without altering its size, functionality, or visibility in file-browsing utilities. ADS stores metadata such as file attributes, timestamps, and word count and can also be used to embed additional data or malicious code. By forking data into existing files, ADS remains undetected in standard file inspection and provides attackers with a method to hide malicious code, rootkits, or hacker tools. This enables the execution of malicious content without detection by users or system administrators.
		- NTFS data streams allow attackers to hide files undetectable by standard file explorers or security software, as explorers only display root files and ignore linked streams. If a virus embeds itself in an ADS, it remains hidden, as users and default operations interact only with the main data stream.
		- Create NTFS Streams:
			- Open Notepad: notepad myfile.txt:lion.txt
			- Click ‘Yes’ to create the new file, enter some data, and save it
			- View the file size of myfile.txt—it should show as zero
			- The same command can be used to view or modify hidden stream data
		- NTFS Stream Manipulation:
			- Hiding Trojan.exe (Malicious Program) in Readme.txt (Stream):
				- Move the contents of Trojan.exe into an alternate data stream of Readme.txt:
					- c:\> type c:\Trojan.exe > c:\Readme.txt:Trojan.exe
					- The type command hides a file in an alternate data stream (ADS) associated with an existing file. The colon (:) operator is used to specify and create or access the ADS.
			- Creating a Link to the Trojan.exe Stream in the Readme.txt File:
				- After hiding the Trojan.exe file within the Readme.txt file's stream, create a symbolic link to launch Trojan.exe directly from the stream. This provides a shortcut to access the hidden stream.
					- C:\> mklink backdoor.exe Readme.txt:Trojan.exe
			- Executing the Trojan:
				- C:\>backdoor.exe
		- NTFS Streams Detector:
			- Tripwire File Integrity Manager - file integrity checker
			- EventSentry SysAdmin Tools - manipulate hidden streams
			- adslist.exe - manipulate hidden streams
			- Sysinternals’ Streams Utility - identifying and analyzing ADS within system
			- Stream Armor (securityxploded.com)
			- LADS (www.aldeid.com)
			- Stream Detector (www.novirusthanks.org)
			- GMER (www.gmer.net)
			- ADS Scanner (www.pointstone.com)
			- Streams (learn.microsoft.com)
			- AlternateStreamView (www.nirsoft.net)
	- Steganography
		- Steganography is a technique for hiding a secret message within an ordinary message, such as embedding data in a graphic image, to maintain data confidentiality. It is commonly used by attackers to conceal sensitive information, including lists of compromised servers, source code for hacking tools, or plans for future attacks.
		- Steganography hides the existence of a message by replacing bits of unused data in ordinary files, such as graphics, sound, text, audio, or video, with hidden information. The concealed data can take the form of plaintext, ciphertext, or even another image.
		- Classification of Steganography:
			- Technical : Technical steganography employs physical or chemical methods, such as invisible ink, microdots, and computer-based techniques, to conceal the existence of a message. Examples include invisible ink, microdots, and computer-based methods.
				- Computer-based Steganography Techniques:
					- Substitution Techniques : In this technique, the attacker encodes secret information by replacing insignificant bits with the hidden message. If the receiver knows the locations where the secret information is embedded, they can extract the hidden message.
					- Transform Domain Techniques : The transform domain technique hides information in significant parts of the cover image, such as during cropping, compression, or other image processing operations, making it more resistant to attacks. Transformations can be applied either to specific blocks of the image or to the entire image.
					- Spread Spectrum Techniques : This technique is less susceptible to interception and jamming. It involves communication signals occupying more bandwidth than necessary to transmit the information. The sender increases the bandwidth using a code independent of the data, while the receiver employs synchronized reception with the same code to extract the information from the spread spectrum signal.
					- Statistical Techniques : This technique leverages “1-bit” steganography schemes by modifying the cover so that transmitting a “1” significantly alters certain statistical characteristics. When no transmission occurs, the cover remains unchanged, allowing differentiation between modified and unmodified covers. The extraction process relies on hypothesis testing from mathematical statistics.
					- Distortion Techniques : In this technique, the user applies a series of modifications to the cover to create a stego-object, with the modifications representing the transformation of a specific message. Decoding requires knowledge of the original cover, allowing the receiver to measure the differences between the original and the received cover to reconstruct the sequence of modifications.
					- Cover Generation Techniques : In this technique, digital objects are specifically designed to serve as covers for secret communication. The information is encoded in a way that ensures the creation of a suitable cover for concealing the secret message.
			- Linguistic : This type of steganography conceals a message within the carrier of another file, often utilizing text-based or language-driven methods.
				- Semagram : Semagrams are a steganography technique that conceals information using signs or symbols. In this method, the user embeds objects or symbols within the data, altering its appearance to convey a predetermined meaning.
					- Visual Semagram : This technique conceals information within drawings, paintings, letters, music notes, or symbols.
					- Text Semagram : A text semagram hides a message by altering the appearance of the carrier text, such as changing font sizes and styles, adding extra spaces or white spaces, and incorporating flourishes in letters or handwritten text.
				- Open Codes : Open code conceals a secret message within a legitimate carrier message, designed in a pattern that is unclear to the average reader. The carrier message, also known as overt communication, hides the secret message, referred to as covert communication.
					- Covered Ciphers : This technique conceals the message within a carrier medium that is visible to everyone. The hidden message can be extracted by anyone who knows the method used to embed it.
						- Null Cipher : This technique hides a message within a large amount of irrelevant data. The original message is mixed with the unused data in a specific order—horizontally, diagonally, vertically, or in reverse—making it unintelligible to anyone who does not know the correct order.
						- Grille Cipher : This technique encrypts plaintext by writing it onto a sheet of paper through a pierced (or stenciled) sheet of paper, cardboard, or a similar material. The message can be deciphered using an identical grille. This system is difficult to crack, as only someone with the correct grille can extract the hidden message.
					- Jargon Code : In this type of steganography, a specific language or jargon is used that is meaningful only to a particular group of people, while remaining incomprehensible to others. A jargon code functions similarly to a substitution cipher but replaces entire words instead of individual letters.
		- Types of Steganography based on Cover Medium:
			- Image Steganography :
				- Image File Steganography Techniques:
					- Least-Significant-Bit Insertion : The least-significant-bit (LSB) insertion technique is a widely used method in image steganography, where the rightmost bit of each pixel holds secret data. In this method, the binary data of the message is divided and embedded into the LSB of each pixel in a predetermined sequence. Modifying the LSB causes minimal changes to the image, resulting in no visible difference to the human eye and making detection difficult.
					- Masking and Filtering : Masking and filtering techniques exploit human vision's inability to detect subtle changes in images. Similar to watermarks on paper, these methods use grayscale images or digital watermarks to conceal information. Masking hides secret data by embedding it within an image file.
					- Algorithms and Transformation : The algorithms and transformation technique hides secret information during image compression by applying compression algorithms and transformation functions. This method uses mathematical functions to conceal data by embedding it in the least significant coefficients during the compression process.
						- Types of Transformation used in the Compression Algorithm:
							- Fast Fourier transformation
							- Discrete cosine transformation
							- Wavelet transformation
			- Document steganography
			- Folder Steganography
			- Video Steganography
			- Audio Steganography
				- Audio Steganography Methods:
					- Echo Data Hiding : The echo data hiding method embeds secret information in audio by adding an echo with controlled parameters - amplitude, decay rate, and delay. Imperceptible delay times encode binary data, while the parameters remain below audible thresholds, ensuring the hidden data blends seamlessly with the carrier signal.
					- Spread Spectrum Method:
						- Direct-Sequence Spread Spectrum (DSSS) : DSSS is a frequency modulation technique that spreads a low-bandwidth signal over a broad frequency range, allowing multiple users to share a single channel. In DSSS steganography, secret messages are embedded in radio wave frequencies, though the method may introduce some random noise to the signal.
						- Frequency-Hopping Spread Spectrum (FHSS) : In FHSS, the frequency spectrum of an audio file is rapidly altered, hopping between different frequencies. This spread spectrum method is crucial for secure communications in both commercial and military applications.
						- LSB Coding : LSB encoding embeds a secret binary message in the least significant bit of each audio signal sample, enabling the hiding of large data volumes. While using the last two bits increases capacity, it risks adding noise. However, its poor resistance to manipulation makes it less reliable, as channel noise and resampling can easily reveal hidden data.
						- Tone Insertion : This method embeds data in an audio signal by inserting inaudible low-power tones, concealed by louder audio signals. It is difficult for eavesdroppers to detect the secret message, offering protection against attacks like low-pass filtering and bit truncation. Audio steganography software uses this technique to embed secret data in audio files.
						- Phase Encoding : Phase coding substitutes the phase of an audio segment with a reference phase to represent data. It encodes secret message bits as phase shifts in the phase spectrum of a digital signal, achieving soft encoding with a favorable signal-to-noise ratio.
			- Whitespace Steganography : Whitespace steganography hides messages in ASCII text by appending invisible spaces and tabs to the ends of lines. Since these characters are not typically visible in text viewers, the message remains hidden from casual observers. With built-in encryption, the message remains unreadable even if detected.
			- Web Steganography : In web steganography, a user hides web objects behind other objects and uploads them to a web server.
			- Spam/Email Steganography
			- Natural Text Steganography : Natural text steganography is the process of converting sensitive information into user-defined free text, such as a play.
			- Hidden OS Steganography : Hidden OS steganography is the process of concealing one operating system within another.
			- C++ Source-Code Steganography : In C++ source-code steganography, a user hides a set of tools within the source code files.
			- Compressed Data Steganography : In compressed data steganography, information is hidden in the least significant or reserved bits of compressed files. This technique leverages file compression methods (e.g., ZIP, RAR, JPEG, PNG) to conceal secret data, making it undetectable to unauthorized parties.
		- Steganography Tools:
			- Whitespace:
				- Snow : SNOW conceals messages in ASCII text by appending invisible whitespace (spaces and tabs) to the end of lines, hiding the message from casual observers. If its built-in encryption is used, the message remains unreadable even if detected, exploiting the steganographic nature of whitespace.
			- Image:
				- OpenStego : OpenStego is a steganography application that allows data hiding by embedding any data within an image file and watermarking by adding an invisible signature to image files, which can be used to detect unauthorized copying.
				- Steghide : Steghide is a steganography program that can hide data within various image and audio files. It preserves color and sample frequencies, making the embedded data resistant to first-order statistical tests.
				- StegOnline : StegOnline is an open-source, web-based steganography toolkit designed to simplify the creation and solving of steganography challenges.
				- SSuite Picsel : SSuite Picsel secures text messages using steganographic encryption.
				- CryptaPix : CryptaPix is an image file management and encryption program for Windows that organizes, prints, and secures digital photos and downloaded image files.
				- Gifshuffle : Gifshuffle conceals messages in GIF images by shuffling the colormap, leaving the image visually unchanged. It supports all GIF images, including those with transparency and animation, and also provides compression and encryption for the hidden message.
				- Coagula
			- Document:
				- StegoStick : A steganographic tool that allows users to hide any file within another file. It is based on image, audio, and video steganography, enabling users to conceal files or messages within image formats (BMP, JPG, GIF), audio/video formats (MPG, WAV, etc.), or other file formats (PDF, EXE, CHM, etc.).
				- StegJ : A cross-platform steganography software written entirely in Java, featuring robust AES support.
				- Office XML : Office XML Steganography Tool adds a file to a Microsoft Office document and edits the [Content_Types].xml to prevent Office programs from flagging the file as corrupted.
				- Snow : SNOW conceals messages in ASCII text by appending invisible whitespace (spaces and tabs) to the end of lines, hiding the message from casual observers. If its built-in encryption is used, the message remains unreadable even if detected, exploiting the steganographic nature of whitespace.
				- Data Stash : Data Stash is a steganographic security tool that hides sensitive data files within other files using steganography. A large bitmap, database file, or any other file can be selected as a receptacle, and data files can be added using an easy drag-and-drop mechanism.
			- Video:
				- OmniHide Pro : OmniHide PRO conceals secret files within ordinary images, videos, or music files. The resulting stego file can be used or shared like any normal file, keeping its hidden content undetectable. It also secures the hidden file with a password for added protection.
				- RT Steganography : Real-Time Steganography in Video Streaming Technology enables the transmission of hidden data (text, binary, etc.) within a video while it is being streamed to the recipient.
				- StegoStick : A steganographic tool that allows users to hide any file within another file. It is based on image, audio, and video steganography, enabling users to conceal files or messages within image formats (BMP, JPG, GIF), audio/video formats (MPG, WAV, etc.), or other file formats (PDF, EXE, CHM, etc.).
				- OpenPuff : OpenPuff is a professional steganography tool used to hide data within carrier files such as images, audio, videos, or other media formats. It supports multi-level security by combining password protection, cryptographic techniques, and carrier chaining (splitting the hidden data across multiple carriers).
				- MSU StegoVideo : MSU StegoVideo is a unique tool for hiding any file within a video sequence, available as a VirtualDub filter or standalone executable.
			- Audio:
				- DeepSound : DeepSound is a steganography tool and audio converter that hides secret data within audio files. It also extracts hidden files directly from audio files or CD tracks.
				- BitCrypt : BitCrypt is an advanced encryption utility that enables the undetectable storage and transmission of information. It can be used to store plaintext securely, hiding it from third parties, or to transmit information over the Internet.
				- StegoStick : A steganographic tool that allows users to hide any file within another file. It is based on image, audio, and video steganography, enabling users to conceal files or messages within image formats (BMP, JPG, GIF), audio/video formats (MPG, WAV, etc.), or other file formats (PDF, EXE, CHM, etc.).
				- MP3Stego : MP3Stego hides information in MP3 files during the compression process by first compressing and encrypting the data, then embedding it into the MP3 bitstream.
				- QuickCrypto : Hide files on the system so only the owner can recover and access them. Conceal sensitive data (text and any file type) within innocent 'carrier' files like JPEG, GIF, BMP, MP3, and WAV. Easily blend encrypted files and messages into various other files.
				- Spectrology : Images to audio files with corresponding spectrograms encoder.
			- Folder:
				- GiliSoft File Lock Pro : It is a military-grade encryption tool that secures files by locking folders on internal and external drives, including USB, flash, thumb, memory cards, and network drives. It encrypts, hides, and makes files, folders, and drives read-only, as well as password-protects them.
				- Folder Lock : File locking software that Locks folders and Encrypts files.
				- Hide Folders 5 : Hide Folders is a software application that password-protects private information on a hard drive, allowing files and folders to be made inaccessible, invisible, or protected from modification or removal.
				- InvisibleSecrets : Encrypt file contents, hide files and emails, and prevent unauthorized access to private documents.
				- QuickCrypto : Hide files on the system so only the owner can recover and access them. Conceal sensitive data (text and any file type) within innocent 'carrier' files like JPEG, GIF, BMP, MP3, and WAV. Easily blend encrypted files and messages into various other files.
			- Spam/Email:
				- Spam Mimic : Spam Mimic is a spam "grammar" for a mimic engine created by Peter Wayner. It encodes secret messages into innocent-looking spam emails. The tool's encoder hides the secret message within spam, using elements like a password, fake PGP, fake Russian text, and spacing.
		- Steganalysis:
			- Steganalysis is the process of detecting and extracting covert messages hidden using steganography. It identifies hidden messages embedded in images, text, audio, and video carrier mediums, serving as the reverse process of steganography.
			- Steganalysis has two aspects: detection and distortion of messages. In the detection phase, the analyst examines the relationships between the steganography tools, stego-media, cover, and message. In the distortion phase, the analyst manipulates the stego-media to extract the embedded message and determines if it is useless and should be removed.
			- Steganalysis Methods/ Attacks on Steganography:
				- Stego-only : In a stego-only attack, the steganalyst or attacker only has access to the stego-medium or stego-object, with no additional information. The goal is to try every possible steganography algorithm and related attack to recover the hidden information.
				- Known-stego : This attack allows the attacker to know the steganography algorithm, as well as both the original and stego-objects, enabling the extraction of the hidden information using the available data.
				- Known-message : The known-message attack assumes access to both the message and the stego-medium. With this information, the attacker can detect the technique used to hide the message.
				- Known-cover : In a known-cover attack, attackers have access to both the stego-object and the original cover medium. This allows them to compare the two and detect changes in the medium's format to uncover the hidden message.
				- Chosen-message : In this attack, the steganalyst uses a known message to generate a stego-object with various steganography tools, aiming to identify the algorithm used to hide the information. The goal is to detect patterns in the stego-object that may indicate the specific steganography tools or algorithms employed.
				- Chosen-stego : The chosen-stego attack occurs when the steganalyst knows both the stego-object and the steganography tool or algorithm used to hide the message.
				- Chi-square : The chi-square method uses probability analysis to test whether a stego-object and the original data are identical. If the difference is nearly zero, no data is embedded; otherwise, the stego-object contains hidden data.
				- Distinguishing Statistical : In the distinguishing statistical method, the steganalyst or attacker analyzes statistical changes caused by the embedded algorithm, along with the length of the hidden data, to detect the presence of embedded information.
				- Blind Classifier : In the blind classifier method, a blind detector is provided with the original or unmodified data to learn its characteristics from multiple perspectives. The output is then used to train a classifier to detect differences between the stego-object and the original data.
			- Detecting Steganography:
				- Text File : In text steganography, data is hidden by altering character positions, which can be detected through patterns, language use, line height, or unusual blank spaces. A simple word processor may reveal these alterations by displaying spaces, tabs, and other hidden characters. Detection can focus on unusual patterns, extra spaces, and invisible characters in the stego-object.
				- Image File : Hidden information in an image can be detected by analyzing changes in size, file format, timestamps, and the color palette. Key detection indicators include display distortions, image degradation, anomalies in color composition, luminance, pixel relationships, and exaggerated noise. Statistical analysis helps identify steganography by examining the least significant bits (LSBs), which become non-random when a secret message is embedded. By comparing LSBs with random values, statistical methods can reveal hidden data, particularly when encrypted data with high entropy is used.
				- Audio File : Audio steganography embeds confidential information, such as private documents and files, into digital sound. Statistical analysis can detect it by examining LSB modifications and scanning inaudible frequencies for hidden data. Odd distortions and patterns in the audio signal often reveal the presence of secret information.
				- Video File : Detection of secret data in video files combines methods used for both image and audio files. Special code signs and gestures can also assist in identifying hidden information.
		- Steganography Detection Tools:
			- zsteg : The zsteg tool is used to detect stegano-hidden data in PNG and BMP image files.
			- StegoVeritas : StegoVeritas is a versatile steganography tool that supports multiple image types and default actions, with options for tasks like extracting LSB, color mapping, and more.
			- Stegextract : Stegextract is a Bash script that extracts hidden files and strings from images, supporting PNG, JPG, and GIF formats. It retrieves trailing data after the image's closing bytes and any hidden files embedded within the image.
			- StegoHunt MP : StegoHunt MP is the next generation of WetStone’s industry-leading steganography detection and steganalysis suite. It effectively detects the presence of steganography and data-hiding programs, as well as the carrier files in which hidden data payloads may reside.
			- Steganography Studio : Steganography Studio is a tool for learning, using, and analyzing key steganographic algorithms. It implements several highly configurable algorithms with various filters, as well as advanced image analysis algorithms for detecting hidden information.
			- Virtual Steganographic Laboratory (VSL) : The Virtual Steganographic Laboratory (VSL) is a graphical block diagramming tool that enables the use, testing, and adjustment of methods for both image steganography and steganalysis. VSL features a simple GUI and a modular, plug-in architecture.
- Establishing Persistence
	- Maintaining Persistence Using Windows Sticky Keys:
		- In Windows, the Sticky Keys feature allows users to use modifier keys like Ctrl, Alt, and Shift without pressing them simultaneously. Attackers can exploit this feature to maintain persistence. After gaining access to a remote system, attackers can escalate their privileges using the BypassUAC exploit in Metasploit. Once privileges are escalated, they can use the Sticky Keys module in Metasploit to maintain persistence on the compromised system. When the attacker restarts the system and presses the Shift key five times, a Command Prompt window opens with system-level access.
	- Maintaining Persistence by Abusing Boot or Logon Autostart Executions:
		- Attackers exploit system boot or logon autostart programs to escalate privileges and maintain persistence by applying custom configuration settings on a compromised machine. This allows attackers to automatically run programs during system boot or logon. They typically use two methods to abuse autostart execution: registry run keys and startup folders.
		- Executing Logon Autostart:
			- Registry Run Keys:
				- Enumerating Assign Permissions Using WinPEAS:
					- Attackers can use the WinPEAS script to identify potential paths for privilege escalation within Windows.
					- Enumerate permissions: winPEASx64.exe quiet applicationinfo
					- This command enables attackers to enumerate all permissions assigned to a valid user for a specific service.
			- Startup Folder:
				- Attackers can inject malicious applications into the startup folder, causing them to run automatically when a user signs into their account. They can escalate privileges by exploiting and manipulating the startup folder's locations.
				- Abusing Startup Folder Using icacls:
					- Misconfigured locations in a startup folder can be exploited by attackers to inject malicious payloads, such as Remote Access Trojans (RATs), enabling them to maintain persistence.
					- Enumerate permissions: icacls "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup"
				- Using Sysinternals tool (accesschk.exe) for Identifying Permissions:
					- accesschk.exe /accepteula "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup"
	- Domain Dominance Through Different Paths:
		- Domain dominance is the process of gaining control over critical assets, such as domain controllers, on a target system to access other networked resources. Attackers often use social engineering techniques to launch domain dominance attacks by compromising an internal user.
		- Domain Dominance Techniques:
			- Remote Code Execution:
				- Attackers attempt to execute malicious code on the target domain controller (DC) via the command-line interface (CLI) to initiate a domain dominance attack. By leveraging this technique, attackers can maintain persistence, enabling them to carry out malicious activities over an extended period without detection.
				- Steps:
					- Create a Dummy Process and User on the Target DC - Use WMI to create a dummy user and process on the target domain controller (DC):
						- wmic /node:<DomainControllerName> process call create "net user /add PiratedProcess Du^^Y01"
						- Here, PiratedProcess is the username, and Du^^Y01 is the password for the dummy user created on the target DC.
					- Add the User to the "Admins" Group: PsExec.exe \\<DomainControllerName> -accepteula net localgroup "Admins" PiratedProcess /add
					- Identify the Created User in Active Directory Users and Computers (ADUC) - Navigate to Active Directory Users and Computers (ADUC) and locate the user created using the above command.
					- Verify Membership in the "Admins" Group - Open the properties window for the created user in ADUC. Navigate to the Member Of tab to confirm their membership in the "Admins" group.
					- After successfully adding a new user to the "Admins" group, the attacker uses the newly created credentials to maintain persistence on the target domain controller (DC).
			- Abusing Data Protection API (DPAPI):
				- The Data Protection API (DPAPI) is a unified framework in Windows environments that securely stores cryptographically protected files, browser passwords, and other sensitive data. Windows domain controllers (DCs) hold a master key that can decrypt DPAPI-protected files.
				- Recover the master key with Mimikatz using the password of a compromised user.
				- Retrieve all local master keys with compromised admin credentials: sekurlsa::dpapi
				- Retrieve all backup master keys: lsadump::backupkeys /system:dc01.offense.local /export
				- Cross-check whether the secured master keys have been obtained by navigating to the directory containing the mimikatz.exe file and looking for file formats such as .der, .key, .pvk, and .pfx. By obtaining the master key, the attacker can decrypt any DPAPI-encrypted file from any device on the network, enabling them to maintain persistence.
			- Malicious Replication:
				- It allows attackers to create an exact copy of user data using administrative credentials. Attackers often target sensitive accounts, such as "krbtgt," to replicate them.
				- Malicious replication: Invoke-Mimikatz -command '"lsadump::dcsync /domain:<Target Domain> /user:<krbtgt>\<Any Domain User>"
			- Skeleton Key Attack:
				- A skeleton key is a type of malware that attackers use to inject false credentials into domain controllers, creating a backdoor password. It is a memory-resident virus that allows an attacker to obtain a master password, enabling them to authenticate as a legitimate user within the domain.
				- Working of the Skeleton Key Attack:
					- This attack is straightforward and only requires executing misc::skeleton on each domain controller.
					- Invoke-Mimikatz -Command '"privilege::debug" "misc::skeleton"' - <target domain controller name>
					- With this, the attacker can masquerade as any user using the default Mimikatz credentials.
					- Attackers can also execute skeleton key attacks by patching the Local Security Authority Subsystem Service (LSASS). They leverage their access to the domain to install malware on the domain controllers (DCs), which then auto-patches the LSASS, generating a new skeleton key or master password that works for all users.
					- The error shown in the above screenshot appears if LSASS has already been patched with skeleton keys. Alternatively, attackers can use the Empire tool, which includes a module that automates the process by running Mimikatz entirely in memory, preventing the binary from being dropped on the domain controller (DC).
					- powershell/persistence/misc/skeleton_key
			- Golden Ticket Attack:
				- A golden ticket attack is a post-exploitation technique used by attackers to gain complete control over the entire Active Directory (AD). Attackers execute this attack by exploiting the Kerberos authentication protocol, forging Ticket Granting Tickets (TGTs) after compromising a Key Distribution Center (KDC) account (KRBTGT), which grants access to various resources. This attack enables attackers to maintain persistence and gather more information within the AD by masquerading as privileged users.
				- Working of Golden Ticket Attack:
					- Attackers typically compromise a valid user account either through phishing emails or by exploiting vulnerabilities or security misconfigurations.
					- Attackers gather domain information, such as the domain name and domain security identifier (SID), using the whoami command.
					- Elevate privileges to the domain administrator-level account to steal the NTLM hash of KRBTGT. Use Mimikatz to perform a pass-the-hash or DCSync attack to extract KRBTGT's password hash:
					- lsadump::dcsync /domain:<domain_name> /user:krbtgt
					- After obtaining the password hashes, use the Mimikatz command to create a golden ticket by impersonating an administrator-level user. This grants access to any resource, group, or domain within the environment:
					- kerberos::golden /domain:<domain_name> /sid:<SID> /rc4:<KRBTGT_hash> /id:<value> /user:<username>
					- The final step can also be executed using the NTLM hashes obtained from a malicious replication process.
					- Attackers maintain persistence by configuring the ticket's validity period. 
			- Silver Ticket Attack:
				- A silver ticket attack is a post-exploitation technique used by attackers to steal legitimate users’ credentials and forge a fake Kerberos Ticket Granting Service (TGS) ticket. To initiate this attack, the attacker must have access to credentials obtained from a local service account or the system’s SAM database. The attacker then creates a forged Kerberos TGS ticket using the Mimikatz tool to establish a connection with the target service.
				- The attacker initially compromises the target system through techniques such as phishing or vulnerability exploitation. After gaining access to a networked system, the attacker initiates the silver ticket attack by forging a false Kerberos silver ticket.
					- The attacker gathers domain information, such as the domain name and domain security identifier (SID), using the whoami command.
					- The attacker obtains additional details about the service or service type to target.
					- The attacker deploys password-cracking tools, such as Mimikatz, on the compromised system to extract the Kerberos service’s local NTLM password hash.
					- The attacker initiates offline password attacks, such as Kerberoasting, to obtain a raw or plaintext password for the service.
					- The attacker forges a Kerberos TGS ticket using Mimikatz to establish a connection with the target service.
					- The attacker uses both the forged TGS and the hash data to authenticate the local service as a legitimate user.
					- The attacker exploits the TGS to elevate privileges and permissions.
					- Note: Privilege Attribute Certificate (PAC) validation requests and PAC validation responses are optional in a silver ticket attack.
					- If an attacker successfully elevates privileges and obtains admin rights to execute code on a local machine, they can run the following command to retrieve the NTLM hashes of the AD system’s password:
					- mimikatz “privilege::debug” “sekurlsa::logonpasswords”
