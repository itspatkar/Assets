
Vulnerability Assessment and Penetration Testing (VAPT)

# Recon
- Passive:
    - Headers Analysis
    - Network Scan: nmap
    - Vulnerable Software/Libraries: Wappalyzer, BuiltWith, WhatWeb
    - Google Dorking: Exposed sensitive info, endpoints
    - Source Code Review: Client-side JS, Retire.js
- Active:
    - Directory/File Enumeration: ffuf, dirsearch, gobuster
    - Endpoint Discovery: Look for hidden admin panels, APIs, test directories
    - JavaScript Analysis: Parse JS files for secrets, API paths, tokens (fetch all js files and find senstive info)

# Enumeration
- User Inputs: Identify all input points:
    - Search bars
    - Registration/login forms
    - Feedback/contact forms
    - Coupon/gift code
    - File upload
- Authentication Mechanisms: Check for:
    - Login page brute-force protection
    - Forgotten password functionality
    - Account lockout
    - OTP/email verification bypass
    - Enum via login/registration (invalid username vs invalid password)
- Role & Access Controls: Enumerate features as:
    - Anonymous user
    - Normal customer
    - Try privilege escalation attempts (e.g., access /admin, modify user_id)

Penetration Testing:
- Input-based Vulnerabilities:
    - XSS (Reflected, Stored, DOM): In search, reviews, profile updates
    - SQL Injection: Classic, blind, time-based (login, product ID, filters)
    - Command Injection: In file upload, image processing
    - XXE/XInclude: In file uploads or XML APIs
    - SSRF: In image fetchers, webhooks, PDF generation
- Authentication & Session:
    - Weak login protections: Brute-force, password spraying
    - Session fixation/Token reuse
    - Insecure JWTs or predictable session IDs
    - CSRF on state-changing requests
    - OAuth/OpenID misconfigurations (if used)
- Business Logic Issues:
    - Add product to cart, change price via client-side tampering
    - Coupon code reuse, stack, or logic bypass
    - Race conditions (e.g., gift card redemption multiple times)
    - Cart manipulation -> buy expensive product at cheaper price
- File Upload & Storage:
    - Upload:
        - Malicious file extensions (.php, .php.jpg, .svg)
        - Bypass content-type checks
    - Check for:
        - Stored XSS in file preview
        - Direct file access (/uploads/filename.jpg)
        - Open S3 buckets or cloud misconfigs
- Access Control Failures (IDORs)
    - Try accessing:
        - Other users' orders (/orders/123)
        - Change user_id, product_id in requests
        - View or download invoices/payment details
